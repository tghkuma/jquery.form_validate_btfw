{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./js/jquery.btfw.form_validate.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","$","window","pluginName","pluginSettings","fn","method","settings","methods","init","options","extend","defaults","this","each","$element","data","func","on","isFunction","destroy","off","dispError","arrErrors","self","eroor","setError","apply","message","length","focusError","field","find","focus","offset","top","innerHeight","console","warn","helpers","format","messages","NOT_EXISTS_FIELD","undefined","animate","scrollTop","focusErrorSpeed","clearError","errorType","clearErrorBootstrap3","clearErrorTb2","clearErrorBootstrap","setErrorBootstrap3","setErrorTb2","setErrorBootstrap","removeClass","nextAll","remove","error_message","indexOf","attr","addClass","parent","hasClass","append","filter","after","form_check","closest","input_group","validate","result","getValidateResult","validate_alert","alert","VALIDATE_ERROR","join","form","fields","isArray","rules","arrRules","$objVal","bValueExists","existsValue","rule","errors","params","arrRuleErrors","slice","split","JSON","parse","e","pushErrors","validateExistsMethods","REQUIRED","validateMethods","concat","numeric","objVal","validity","badInput","validationMessage","number","zip_ex","zip_after","zip_suffix","getValue","val","INSUFFICIENT","ymd","year","month","day","b_year","b_month","b_day","objY","ymd_suffix_y","objM","ymd_suffix_m","objD","ymd_suffix_d","push","REQUIRED_PART","DATE_PART_Y","DATE_PART_M","DATE_PART_D","INSUFFICIENT_PART","_isInteger","INTEGER_PART","_isDate","DATE_INVALID","confirm","confirmVal","confirm_suffix","CONFIRM","d_name","CONFIRM_FIELD","email","email_error","_isEmailEx","zenkaku","_isZenkaku","ZENKAKU","hankaku","_isHankaku","HANKAKU","zen_katakana","_isAllkana","ZEN_KANA","hiragana","_isAllHiragana","HIRAGANA","tel","_isTel","TEL","minlength","min","Number","MIN_LENGTH","maxlength","max","MAX_LENGTH","isNumeric","NUMERICAL_VALUE","numlength","reg_tmp","err_message_tmp","RegExp","test","NUM_LENGTH","INTEGER","MIN","range","RANGE","date","reg","match","$2","$3","$4","DATE","datetime","$6","_isTime","$7","$8","$10","TIME_INVALID","DATETIME","date_ex","DATE_EX","y","$1","$5","time","TIME_HM","TIME","zip","ZIP","checkbox","check","CHECKBOX_RANGE","CHECKBOX_MIN","regexp","err_message","REGEXP_INVALID_VALUE","REGEXP_INVALID_PARAM","ret","type","error","_text","inpText","_value","isNaN","_year","_month","_day","arrMaxMonth","_hour","_minute","_second","_inpText","charAt","_strEmail","atom","validChars","domainPat","matchArray","MAIL_NO_AT","domain","IPArray","MAIL_INVALID_IP","MAIL_NO_DOMAIN","atomPat","domArr","len","MAIL_INVALID_LOCALE","MAIL_INVALID_DOMAIN","args","Array","arguments","shift","index","element","replace","delimiter","arrErrorMessages","submit","MAX","jQuery","document"],"mappings":"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","file":"jquery.btfw.form_validate.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/**\n * @file パラメータチェックプラグイン\n * (TwitterBootstrap4.x対応)\n * @version 1.7.x\n * @see https://github.com/tghkuma/jquery.form_validate_btfw\n * @copyright {@link https://team-grasshopper.info/ Team-Grasshopper}\n */\n/** @external \"jQuery.fn\" */\n/** @external jQuery */\n(function ($, window) {\n  'use strict';\n\n  const pluginName = 'formValidate',\n    pluginSettings = pluginName + '.settings';\n\n  /**\n   * @function external:\"jQuery.fn\".formValidate\n   * @param {object} method\n   * @return {object} jQuery object\n   */\n  $.fn[pluginName] = function (method) {\n    let settings,\n      methods = {\n        /**\n         * 初期化処理\n         * @param {object} options オプション\n         * @returns {*}\n         */\n        init: function (options) {\n          settings = $.extend({}, $.fn[pluginName].defaults, options);\n          return this.each(function () {\n            const $element = $(this);\n            $element.data(pluginSettings, settings);\n            // イベント登録処理\n            const event_names = ['submit'];\n            $.each(event_names, function () {\n              const func = settings[this];\n              if (typeof func === 'string') {\n                $element.on(this + '.' + pluginName, function () {\n                  return $element[pluginName](func);\n                });\n              } else if ($.isFunction(func)) {\n                $element.on(this + '.' + pluginName, func);\n              }\n            });\n          });\n        },\n        /**\n         *\n         * @returns {*}\n         */\n        destroy: function () {\n          return this.each(function () {\n            const $element = $(this);\n            // イベント削除処理\n            const event_names = ['submit'];\n            $.each(event_names, function () {\n              $element.off(this + '.' + pluginName);\n            });\n          });\n        },\n        /**\n         * エラー表示処理\n         * @param {string[]} arrErrors エラー一覧\n         */\n        dispError: function (arrErrors) {\n          const settings = $(this).data(pluginSettings);\n          const self = this;\n          $.each(arrErrors, function (i, eroor) {\n            methods.setError.apply(self, [eroor.name, eroor.message]);\n          });\n          if (0 < arrErrors.length && settings.focusError) {\n            // 最初のエラーにフォーカス\n            methods.focusError.apply(this, [arrErrors[0].name]);\n          }\n        },\n\n        /**\n         * 指定のエラーにフォーカス\n         * @param {string} name\n         */\n        focusError: function (name) {\n          const settings = $(this).data(pluginSettings);\n          const field = $(this).find(\"*[name='\" + name + \"']\");\n          let p = 0;\n          if (field.length !== 0) {\n            $(field).focus();\n            p = $(field).offset().top - $(window).innerHeight() / 2;\n            if (p < 0) {\n              p = 0;\n            }\n          } else {\n            console.warn(helpers.format(settings.messages.NOT_EXISTS_FIELD, name));\n          }\n          if ($.fn.animate !== undefined) {\n            $('html,body').animate({scrollTop: p}, settings.focusErrorSpeed);\n          } else {\n            $('html,body').scrollTop(p);\n          }\n        },\n\n        /**\n         * エラークリア処理\n         * @param {string} name 項目名(未指定時全て)\n         */\n        clearError: function (name) {\n          const settings = $(this).data(pluginSettings);\n          if ($.isFunction(settings.clearError)) {\n            settings.clearError.apply(this, [name]);\n          } else if (settings.errorType === 'bs3') {\n            methods.clearErrorBootstrap3.apply(this, [name]);\n          } else if (settings.errorType === 'tb2') {\n            methods.clearErrorTb2.apply(this, [name]);\n          } else {\n            methods.clearErrorBootstrap.apply(this, [name]);\n          }\n          return this;\n        },\n\n        /**\n         * 指定箇所エラー表示処理\n         * @param {string} name 項目名\n         * @param {string} message エラー文言\n         */\n        setError: function (name, message) {\n          const settings = $(this).data(pluginSettings);\n          if ($.isFunction(settings.setError)) {\n            settings.setError.apply(this, [name, message]);\n          } else if (settings.errorType === 'bs3') {\n            methods.setErrorBootstrap3.apply(this, [name, message]);\n          } else if (settings.errorType === 'tb2') {\n            methods.setErrorTb2.apply(this, [name, message]);\n          } else {\n            methods.setErrorBootstrap.apply(this, [name, message]);\n          }\n          return this;\n        },\n\n        /**\n         * エラークリア処理\n         * (Bootstrap4レイアウト)\n         * @param {string} name 項目名(未指定時全て)\n         */\n        clearErrorBootstrap: function (name) {\n          if (name) {\n            const field = $(this).find(\"*[name='\" + name + \"']\");\n            $(field).removeClass('is-invalid')\n              .nextAll('.invalid-feedback').remove();\n          } else {\n            $(this).find('.is-invalid')\n              .removeClass('is-invalid')\n              .nextAll('.invalid-feedback').remove();\n          }\n          return this;\n        },\n\n        /**\n         * 指定箇所エラー表示処理\n         * (Bootstrap4レイアウト)\n         * @param {string} name 項目名\n         * @param {string} message エラー文言\n         */\n        setErrorBootstrap: function (name, message) {\n          const field = $(this).find(\"*[name='\" + name + \"']\");\n          const error_message = '<div class=\"invalid-feedback\">' + message + '</div>';\n\n          if (['radio', 'checkbox'].indexOf(field.attr('type')) === -1) {\n            $(field).addClass('is-invalid');\n            if (!$(field).parent().hasClass('input-group')) {\n              $(field).filter(':last').after(error_message);\n            } else {\n              $(field).parent().append(error_message);\n            }\n          } else {\n            const form_check = $(field).closest('.form-check').addClass('is-invalid');\n            $(form_check).filter(':last').after(error_message);\n          }\n          return this;\n        },\n\n        /**\n         * エラークリア処理\n         * (Bootstrap3レイアウト)\n         * @param {string} name 項目名(未指定時全て)\n         */\n        clearErrorBootstrap3: function (name) {\n          if (name) {\n            const field = $(this).find(\"*[name='\" + name + \"']\");\n            $(field).closest('.form-group')\n              .removeClass('has-error')\n              .find('.error_message').remove();\n          } else {\n            $(this).find('.form-group')\n              .removeClass('has-error')\n              .find('.error_message').remove();\n          }\n          return this;\n        },\n\n        /**\n         * 指定箇所エラー表示処理\n         * (Bootstrap3レイアウト)\n         * @param {string} name 項目名\n         * @param {string} message エラー文言\n         */\n        setErrorBootstrap3: function (name, message) {\n          const field = $(this).find(\"*[name='\" + name + \"']\");\n          const error_message = '<span class=\"help-block error_message\">' + message + '</span>';\n          $(field).closest('.form-group').addClass('has-error');\n          if (['radio', 'checkbox'].indexOf(field.attr('type')) === -1) {\n            const input_group = $(field).closest('.input-group');\n            if ($(input_group).length !== 0) {\n              $(input_group).after(error_message);\n            } else {\n              $(field).filter(':last').after(error_message);\n            }\n          } else {\n            $(field).filter(':last').parent().after(error_message);\n          }\n          return this;\n        },\n\n        /**\n         * エラークリア処理\n         * (TwitterBootstrap2.xレイアウト)\n         * @param {string} name 項目名(未指定時全て)\n         */\n        clearErrorTb2: function (name) {\n          if (name) {\n            const field = $(this).find(\"*[name='\" + name + \"']\");\n            $(field).closest('.control-group')\n              .removeClass('error')\n              .find('.error_message').remove();\n          } else {\n            $(this).find('.control-group')\n              .removeClass('error')\n              .find('.error_message').remove();\n          }\n          return this;\n        },\n\n        /**\n         * 指定箇所エラー表示処理\n         * (TwitterBootstrap2.xレイアウト)\n         * @param {string} name 項目名\n         * @param {string} message エラー文言\n         */\n        setErrorTb2: function (name, message) {\n          const field = $(this).find(\"*[name='\" + name + \"']\");\n          $(field).closest('.control-group').addClass('error');\n          $(field).closest('.controls').append('<div class=\"help-block error_message\">' + message + '</div>');\n          return this;\n        },\n\n        /**\n         * パラメータチェック\n         * @param {object} options オプション\n         */\n        validate: function (options) {\n          settings = $.extend($(this).data(pluginSettings), options);\n\n          methods.clearError.apply(this);\n          let result = true;\n          const arrErrors = methods.getValidateResult.apply(this, [settings]);\n          if (0 < arrErrors.length) {\n            methods.dispError.apply(this, [arrErrors]);\n            result = false;\n          }\n          if ($.isFunction(settings.result)) {\n            result = settings.result.apply(this, [result, arrErrors]);\n          }\n          return result;\n        },\n\n        /**\n         * パラメータチェック\n         * (エラー時アラート)\n         * @param {object} options オプション\n         * @returns {boolean|string[]} エラー値\n         */\n        validate_alert: function (options) {\n          settings = $.extend($(this).data(pluginSettings), options);\n\n          let result = true;\n          const arrErrors = methods.getValidateResult.apply(this, [settings]);\n          if (0 < arrErrors.length) {\n            alert(settings.messages.VALIDATE_ERROR + '\\n' + helpers.join(arrErrors));\n            if (settings.focusError) {\n              // 最初のエラーにフォーカス\n              methods.focusError.apply(this, [arrErrors[0].name]);\n            }\n            result = false;\n          }\n          if ($.isFunction(settings.result)) {\n            result = settings.result.apply(this, [result, arrErrors]);\n          }\n          return result;\n        },\n\n        /**\n         * パラメータチェック結果取得\n         * @param {object} options\n         * @returns {boolean|string[]} エラー値\n         */\n        getValidateResult: function (options) {\n          const form = this;\n          settings = $.extend($(this).data(pluginSettings), options);\n\n          let arrErrors = [];\n          const fields = settings.fields;\n\n          if (!$.isArray(fields)) {\n            return arrErrors;\n          }\n\n          $.each(fields, function (i, field) {\n            if (!field.rules) {\n              return true;\n            }\n\n            // パラメータチェック方法\n            let arrRules = field.rules;\n            if (!$.isArray(arrRules)) {\n              arrRules = [arrRules];\n            }\n            // パラメータ値\n            const $objVal = $(form).find(\"*[name='\" + field.name + \"']\");\n            // 値存在チェック\n            const bValueExists = helpers.existsValue($objVal);\n\n            // 各パラメータのチェック処理\n            $.each(arrRules, function (i, rule) {\n              let arrRuleErrors = [];\n              let errors;\n              let params;\n\n              //------------------\n              // ルール分岐\n              //------------------\n              // ルールが配列\n              // [ 'ルール名', [<パラメータ配列>]]\n              // [ 'ルール名', <パラメータ1>, <パラメータ2>..., <パラメータn> ]\n              if ($.isArray(rule)) {\n                if (rule.length === 0) {\n                  return;\n                } else if (rule.length === 2) {\n                  params = rule[1];\n                  if (!$.isArray(params)) {\n                    params = [params];\n                  }\n                } else if (rule.length >= 3) {\n                  params = rule.slice(1);\n                }\n                rule = rule[0];\n              }\n              // ルールがObject\n              // { rule:'ルール名', params:[<パラメータ配列>]}\n              else if (typeof rule === 'object') {\n                if (!rule.rule) {\n                  return;\n                }\n                if (rule.params) {\n                  params = rule.params;\n                  if (!$.isArray(params)) {\n                    params = [params];\n                  }\n                }\n                rule = rule.rule;\n              }\n              // ルールが文字列(旧仕様)\n              else if (typeof rule === 'string') {\n                // パラメータ解析処理\n                params = rule.split(':', 2);\n                if (params[0]) {\n                  rule = params[0];\n                }\n                if (params[1]) {\n                  try {\n                    params = JSON.parse(params[1]);\n                  } catch (e) {\n                    params = params[1].split(',');\n                  }\n                  if (!$.isArray(params)) {\n                    params = [params];\n                  }\n                } else {\n                  params = [];\n                }\n              }\n\n              // 独自チェック関数\n              if ($.isFunction(rule)) {\n                errors = rule.apply(form, [field, $objVal, params, settings]);\n                helpers.pushErrors(arrRuleErrors, field, errors);\n              } else if (typeof rule === 'string') {\n                // 指定フィールドに値が入っているとき\n                if (bValueExists) {\n                  if (validateExistsMethods[rule]) {\n                    errors = validateExistsMethods[rule].apply(form, [field, $objVal, params, settings]);\n                    helpers.pushErrors(arrRuleErrors, field, errors);\n                  } else {\n                    //$.error( 'validateExistsMethod \"' +  rule + '\" does not exist in '+pluginName+' plugin!');\n                  }\n                }\n                // 指定フィールドに値が入っていないとき\n                else {\n                  // 必須項目チェック\n                  if (rule === 'required') {\n                    helpers.pushErrors(arrRuleErrors, field, settings.messages.REQUIRED);\n                  } else if (rule === 'checkbox') {\n                    errors = validateExistsMethods[rule].apply(form, [field, $objVal, params, settings]);\n                    helpers.pushErrors(arrRuleErrors, field, errors);\n                  } else if (validateMethods[rule]) {\n                    errors = validateMethods[rule].apply(form, [field, $objVal, params, settings]);\n                    helpers.pushErrors(arrRuleErrors, field, errors);\n                  } else {\n                    //$.error( 'validateMethods \"' +  rule + '\" does not exist in '+pluginName+' plugin!');\n                  }\n                }\n              }\n\n              // エラー時追加\n              if (arrRuleErrors && 0 < arrRuleErrors.length) {\n                arrErrors = arrErrors.concat(arrRuleErrors);\n              }\n            });\n            return true;\n          });\n          return arrErrors;\n        }\n      };\n\n    const validateMethods = {\n      /**\n       * 数値チェック(値なし)\n       */\n      numeric: function (field, objVal) {\n        // type=\"number\"時の仮対策\n        if (objVal[0] && objVal[0].validity && objVal[0].validity.badInput) {\n          return objVal[0].validationMessage;\n        }\n        return null;\n      },\n      /**\n       * 数値チェック(値なし,エイリアス)\n       */\n      number: function (field, objVal) {\n        return validateMethods.numeric.apply(this, [field, objVal]);\n      },\n\n      /**\n       * 郵便番号の4桁部分が入力された場合\n       * 3桁部が入力必須になるチェック\n       */\n      zip_ex: function (field, objVal, params, settings) {\n        const zip_after = $(this).find(\"*[name='\" + field.name + settings.zip_suffix + \"']\");\n        if (objVal && helpers.getValue(objVal) && (!zip_after || !zip_after.val()))\n          return settings.messages.INSUFFICIENT;\n        return null;\n      },\n\n      /**\n       * 年月日チェック\n       * フォーム name+\"_y\", name+\"_m\", name+\"_d\"のチェックを行う\n       * @param field\n       * @param {jQuery} objVal\n       * @param params\n       * @returns {string[]} エラー一覧(正常時空配列)\n       */\n      ymd: function (field, objVal, params) {\n        // 変数宣言\n        let arrErrors = [];\n\n        // 日付オブジェクト取得\n        let year = null, month = null, day = null;\n        let b_year = false, b_month = false, b_day = false;\n        const objY = $(this).find(\"*[name='\" + field.name + settings.ymd_suffix_y + \"']\");\n        const objM = $(this).find(\"*[name='\" + field.name + settings.ymd_suffix_m + \"']\");\n        const objD = $(this).find(\"*[name='\" + field.name + settings.ymd_suffix_d + \"']\");\n        if (objY && objY.val() !== '') {\n          b_year = true;\n          year = objY.val();\n        }\n        if (objM && objM.val() !== '') {\n          b_month = true;\n          month = objM.val();\n        }\n        if (objD && objD.val() !== '') {\n          b_day = true;\n          day = objD.val();\n        }\n\n        // 日付必須チェック\n        if (params[0] === 'required') {\n          if (!b_year)\n            arrErrors.push(helpers.format(settings.messages.REQUIRED_PART, settings.messages.DATE_PART_Y));\n          if (!b_month)\n            arrErrors.push(helpers.format(settings.messages.REQUIRED_PART, settings.messages.DATE_PART_M));\n          if (!b_day)\n            arrErrors.push(helpers.format(settings.messages.REQUIRED_PART, settings.messages.DATE_PART_D));\n        } else {\n          // 日付の年月日が一部のみ入力されているとき\n          if ((b_year || b_month || b_day) && !(b_year && b_month && b_day)) {\n            if (!b_year)\n              arrErrors.push(helpers.format(settings.messages.INSUFFICIENT_PART, settings.messages.DATE_PART_Y));\n            if (!b_month)\n              arrErrors.push(helpers.format(settings.messages.INSUFFICIENT_PART, settings.messages.DATE_PART_M));\n            if (!b_day)\n              arrErrors.push(helpers.format(settings.messages.INSUFFICIENT_PART, settings.messages.DATE_PART_D));\n          }\n        }\n        // 年数値チェック\n        if (b_year && !helpers._isInteger(year)) {\n          arrErrors.push(helpers.format(settings.messages.INTEGER_PART, settings.messages.DATE_PART_Y));\n        }\n        // 月数値チェック\n        if (b_month && !helpers._isInteger(month)) {\n          arrErrors.push(helpers.format(settings.messages.INTEGER_PART, settings.messages.DATE_PART_M));\n        }\n        // 日数値チェック\n        if (b_day && !helpers._isInteger(day)) {\n          arrErrors.push(helpers.format(settings.messages.INTEGER_PART, settings.messages.DATE_PART_D));\n        }\n\n        // 年月日チェック\n        if (arrErrors.length === 0 && !helpers._isDate(year, month, day)) {\n          arrErrors.push(helpers.format(settings.messages.DATE_INVALID));\n        }\n\n        return arrErrors;\n      }\n    };\n\n    /**\n     * パラメータチェック群\n     *\n     * @param field パラメータ名\n     * @param rule チェックコマンド\n     * @param objVal 値オブジェクト\n     *\n     * @return\tstring|null エラーメッセージ 文字列 or 配列\n     */\n    const validateExistsMethods = {\n      /**\n       * 確認項目\n       */\n      confirm: function (field, objVal) {\n        const confirmVal = $(this).find(\"*[name='\" + field.name + settings.confirm_suffix + \"']\");\n        if (!objVal || !confirmVal || helpers.getValue(objVal) !== confirmVal.val())\n          return helpers.format(settings.messages.CONFIRM, (field.d_name ? field.d_name : settings.messages.CONFIRM_FIELD));\n        return null;\n      },\n      /**\n       * E-Mailチェック\n       */\n      email: function (field, objVal) {\n        const val = helpers.getValue(objVal);\n        if (val) {\n          const email_error = helpers._isEmailEx(val);\n          if (email_error !== '') {\n            return email_error;\n          }\n        }\n        return null;\n      },\n      /**\n       * 全角\n       */\n      zenkaku: function (field, objVal) {\n        if (!helpers._isZenkaku(helpers.getValue(objVal))) {\n          return settings.messages.ZENKAKU;\n        }\n        return null;\n      },\n      /**\n       * 半角\n       */\n      hankaku: function (field, objVal) {\n        if (!helpers._isHankaku(helpers.getValue(objVal))) {\n          return settings.messages.HANKAKU;\n        }\n        return null;\n      },\n      /**\n       * 全角カタカナ\n       */\n      zen_katakana: function (field, objVal) {\n        if (!helpers._isAllkana(helpers.getValue(objVal))) {\n          return settings.messages.ZEN_KANA;\n        }\n        return null;\n      },\n      /**\n       * 全角ひらがな\n       */\n      hiragana: function (field, objVal) {\n        if (!helpers._isAllHiragana(helpers.getValue(objVal))) {\n          return settings.messages.HIRAGANA;\n        }\n        return null;\n      },\n      /**\n       * 電話番号\n       */\n      tel: function (field, objVal) {\n        if (!helpers._isTel(helpers.getValue(objVal))) {\n          return settings.messages.TEL;\n        }\n        return null;\n      },\n      /**\n       * 最小文字数\n       */\n      minlength: function (field, objVal, params) {\n        const min = Number(params[0]);\n        if (helpers.getValue(objVal).length < min)\n          return helpers.format(settings.messages.MIN_LENGTH, min);\n        return null;\n      },\n      /**\n       * 最大文字数\n       */\n      maxlength: function (field, objVal, params) {\n        const max = Number(params[0]);\n        if (max < helpers.getValue(objVal).length)\n          return helpers.format(settings.messages.MAX_LENGTH, max);\n        return null;\n      },\n      /**\n       * 数値チェック\n       */\n      numeric: function (field, objVal) {\n        const val = helpers.getValue(objVal);\n        if (!$.isNumeric(val) || (val.indexOf(' ') !== -1)) {\n          return settings.messages.NUMERICAL_VALUE;\n        }\n        return null;\n      },\n      /**\n       * 数値チェック(エイリアス)\n       */\n      number: function (field, objVal) {\n        return validateExistsMethods.numeric.apply(this, [field, objVal]);\n      },\n      /**\n       * 数値桁数チェック\n       */\n      numlength: function (field, objVal, params) {\n        const val = helpers.getValue(objVal);\n        let reg_tmp = params[0],\n          err_message_tmp = params[0];\n        if (params[1]) {\n          reg_tmp += \",\" + params[1];\n          err_message_tmp += \"～\" + params[1];\n        }\n        const reg = new RegExp(\"^\\\\d{\" + reg_tmp + \"}$\");\n        if (!reg.test(val)) {\n          return helpers.format(settings.messages.NUM_LENGTH, err_message_tmp);\n        }\n        return null;\n      },\n      /**\n       * 最小値\n       */\n      min: function (field, objVal, params) {\n        const val = helpers.getValue(objVal);\n        if (!helpers._isInteger(val)) {\n          return settings.messages.INTEGER;\n        }\n        const min = Number(params[0]);\n        if (val < min)\n          return helpers.format(settings.messages.MIN, min);\n        return null;\n      },\n      /**\n       * 最大値\n       */\n      max: function (field, objVal, params) {\n        const val = helpers.getValue(objVal);\n        if (!helpers._isInteger(val)) {\n          return settings.messages.INTEGER;\n        }\n        const max = Number(params[0]);\n        if (max < val)\n          return helpers.format(settings.messages.MIN, max);\n        return null;\n      },\n      /**\n       * 数値範囲\n       */\n      range: function (field, objVal, params) {\n        const val = helpers.getValue(objVal);\n        if (!helpers._isInteger(val)) {\n          return settings.messages.INTEGER;\n        }\n        const min = Number(params[0]),\n          max = Number(params[1]);\n        if (val < min || max < val)\n          return helpers.format(settings.messages.RANGE, min, max);\n        return null;\n      },\n      /**\n       * 日付\n       */\n      date: function (field, objVal) {\n        const val = helpers.getValue(objVal),\n          reg = new RegExp(\"^((\\\\d{1,4})[/-](\\\\d{1,2})[/-](\\\\d{1,2}))$\", \"g\");\n        // 1980/1/2\n        //\t\t\t\t↓\n        // 1980/1/2,1980/1/2,1980,1,2\n        if (!val.match(reg)) {\n          return settings.messages.DATE;\n        }\n        // 年月日チェック\n        if (!helpers._isDate(RegExp.$2, RegExp.$3, RegExp.$4)) {\n          return settings.messages.DATE_INVALID;\n        }\n        return null;\n      },\n      /**\n       * 日時チェック\n       * [YYYY-MM-DD hh:mm:ss]または[YYYY/MM/DD]の書式でチェックする\n       */\n      datetime: function (field, objVal) {\n        const val = helpers.getValue(objVal),\n          reg = new RegExp(\"^((\\\\d{1,4})[/-](\\\\d{1,2})[/-](\\\\d{1,2}))( ((\\\\d{1,2}):(\\\\d{1,2})(:(\\\\d{1,2}))?))?$\", 'g');\n        // 1980/1/2 24:12:11\n        //      ↓\n        // 1980/1/2 23:12:11,1980/1/2,1980,1,2, 24:12:11,23:12:11,23,12,11\n        if (!val.match(reg)) {\n          return settings.messages.DATETIME;\n        }\n        // 年月日チェック\n        if (!helpers._isDate(RegExp.$2, RegExp.$3, RegExp.$4)) {\n          return settings.messages.DATE_INVALID;\n        }\n        if (RegExp.$6 && !helpers._isTime(RegExp.$7, RegExp.$8, RegExp.$10)) {\n          return settings.messages.TIME_INVALID;\n        }\n        return null;\n      },\n      /**\n       * 日付チェック\n       * [YYYY/MM/DD] or [YYYY/MM] or [YYYY]の書式でチェックする\n       */\n      date_ex: function (field, objVal) {\n        const val = helpers.getValue(objVal),\n          reg = new RegExp(\"^(\\\\d{1,4})([/-](\\\\d{1,2})([/-](\\\\d{1,2}))?)?$\");\n        // 1980/1/2\n        //      ↓\n        // 1980/1/2,1980/1/2,1980,1,2\n        if (!val.match(reg)) {\n          return settings.messages.DATE_EX;\n        }\n        // 年月日チェック\n        const y = RegExp.$1,\n          m = RegExp.$3 ? RegExp.$3 : 1,\n          d = RegExp.$5 ? RegExp.$5 : 1;\n        if (!helpers._isDate(y, m, d)) {\n          return settings.messages.DATE_INVALID;\n        }\n        return null;\n      },\n      /**\n       * 時間チェック\n       * [hh:mm:ss]の書式でチェックする\n       */\n      time: function (field, objVal, params) {\n        const val = helpers.getValue(objVal);\n        let reg;\n        if (params[0] === \"hm\") {\n          reg = new RegExp(\"^(\\\\d{1,2}):(\\\\d{1,2})$\", \"g\");\n          if (!val.match(reg)) {\n            return settings.messages.TIME_HM;\n          }\n          if (!helpers._isTime(RegExp.$1, RegExp.$2, 0)) {\n            return settings.messages.TIME_INVALID;\n          }\n        } else {\n          reg = new RegExp(\"^(\\\\d{1,2}):(\\\\d{1,2}):(\\\\d{1,2})$\", \"g\");\n          if (!val.match(reg)) {\n            return settings.messages.TIME;\n          }\n          if (!helpers._isTime(RegExp.$1, RegExp.$2, RegExp.$3)) {\n            return settings.messages.TIME_INVALID;\n          }\n        }\n        return null;\n      },\n      /**\n       * 郵便番号\n       */\n      zip: function (field, objVal) {\n        const val = helpers.getValue(objVal),\n          reg = new RegExp(\"^\\\\d{1,3}-\\\\d{1,4}$\", \"g\");\n        if (!val.match(reg)) {\n          return settings.messages.ZIP;\n        }\n        return null;\n      },\n      /**\n       * チェックボックス\n       */\n      checkbox: function (field, objVal, params) {\n        const check = objVal.filter(\":checked\").length,\n          min = Number(params[0]);\n        if (2 <= params.length) {\n          const max = Number(params[1]);\n          if (check < min || max < check)\n            return helpers.format(settings.messages.CHECKBOX_RANGE, min, max);\n        } else {\n          if (check < min)\n            return helpers.format(settings.messages.CHECKBOX_MIN, min);\n        }\n      },\n\n      /**\n       * 正規表現チェック\n       * @param {string} field フィールド名\n       * @param {object} objVal 値\n       * @param {string|array} params 正規表現パラメータ\n       *        params[0]:正規表現(文字列 or 正規表現クラス)\n       *        params[1]:正規表現フラグ(オプション)\n       *        params[1 or 2]:エラーメッセージ(オプション)\n       */\n      regexp: function (field, objVal, params) {\n        const val = helpers.getValue(objVal);\n        let reg, err_message;\n        if (!$.isArray(params)) {\n          params = [params];\n        }\n        try {\n          if (typeof params[0] === 'string') {\n            reg = new RegExp(params[0], params[1] ? params[1] : undefined);\n            err_message = params[2];\n          } else {\n            reg = params[0];\n            err_message = params[1];\n          }\n          if (!reg.test(val))\n            return (err_message ? err_message : settings.messages.REGEXP_INVALID_VALUE);\n        } catch (e) {\n          return settings.messages.REGEXP_INVALID_PARAM;\n        }\n        return null;\n      }\n    };\n\n    const helpers = {\n      /**\n       * 値が存在するか？\n       * @param objVal 値Object\n       * @returns true:存在する\n       */\n      existsValue: function (objVal) {\n        let ret;\n        if (!objVal) {\n          ret = false;\n        } else if (objVal.attr('type') === 'checkbox') {\n          ret = (0 < objVal.filter(\":checked\").length);\n        } else {\n          ret = !!helpers.getValue(objVal);\n        }\n        return ret;\n      },\n      /**\n       * 値を返す\n       * @param objVal 値Object\n       * @returns 値\n       */\n      getValue: function (objVal) {\n        const type = objVal.attr('type');\n        let val;\n        if (type === 'radio') {\n          val = objVal.filter(':checked').val();\n        } else if (type !== 'checkbox') {\n          val = objVal.val();\n        } else {\n          val = [];\n          objVal.filter(':checked').each(function () {\n            val.push($(this).val());\n          });\n        }\n        return val;\n      },\n      /**\n       * エラー配列付加\n       * @param {array} arrErrors  エラー情報\n       * @param {object} field    フィールド情報\n       * @param {string|string[]} errors    追加エラー情報\n       * @return  array arrErrors\n       */\n      pushErrors: function (arrErrors, field, errors) {\n        if (typeof errors === 'string' && errors) {\n          arrErrors.push({name: field.name, d_name: field.d_name, message: errors});\n        } else if ($.isArray(errors)) {\n          $.each(errors, function (i, error) {\n            arrErrors.push({name: field.name, d_name: field.d_name, message: error});\n          });\n        }\n        return arrErrors;\n      },\n      /**\n       * 半角英数字チェック\n       * @param    _text  文字列\n       * @return  boolean true:OK, false:NG\n       */\n      _isHankaku: function (_text) {\n        // 半角以外が存在する場合\n        return !(/[^\\x20-\\x7E]/).test(_text);\n      },\n\n      /**\n       * 全角チェック\n       * @param    _text  文字列\n       * @return  boolean true:OK, false:NG\n       */\n      _isZenkaku: function (_text) {\n        return !(/[\\w\\-.]/).test(_text);\n      },\n\n      /**\n       * 電話番号チェック\n       * @param  inpText  文字列\n       * @return  boolean true:OK, false:NG\n       */\n      _isTel: function (inpText) {\n        // 「0～9」「-」「(」「)」以外があったらエラー\n        return !(/[^0-9-()]/).test(inpText);\n      },\n\n      /**\n       * 整数チェック\n       * @param  _value 値\n       * @return  boolean true:OK, false:NG\n       */\n      _isInteger: function (_value) {\n        const test = /^(-\\d+|\\d*)$/.test('' + _value);\n        return test && !isNaN(_value);\n      },\n\n      /**\n       * 年月日整合性チェック\n       * @param  _year  年\n       * @param  _month 月\n       * @param  _day 日\n       * @return  boolean true:OK, false:NG\n       */\n      _isDate: function (_year, _month, _day) {\n        //==========================\n        // 年範囲チェック\n        //==========================\n        if (_year < 1900 || 9999 < _year) {\n          return false;\n        }\n        //==========================\n        // 月範囲チェック\n        //==========================\n        if (_month < 1 || 12 < _month) {\n          return false;\n        }\n        //==========================\n        // 日範囲チェック\n        //==========================\n        // 最小値\n        if (_day < 1) {\n          return false;\n        }\n        // 最大値\n        let arrMaxMonth = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n        // 2月うるう年補正\n        if ((_year % 4 === 0 && _year % 100 !== 0) || _year % 400 === 0) {\n          arrMaxMonth[1] = 29;\n        }\n        return !(arrMaxMonth[_month - 1] < _day);\n      },\n\n      /**\n       * 時分整合性チェック\n       * @param  _hour  時\n       * @param  _minute  分\n       * @param  _second  秒(null=未チェック)\n       * @return  boolean true:OK, false:NG\n       */\n      _isTime: function (_hour, _minute, _second) {\n        //====================\n        //\t時範囲チェック\n        //====================\n        if (_hour < 0 || 24 <= _hour) {\n          return false;\n        }\n        //=====================\n        //\t分範囲チェック\n        //=====================\n        if (_minute < 0 || 60 <= _minute) {\n          return false;\n        }\n        //=====================\n        //\t秒範囲チェック\n        //=====================\n        return !(_second !== null && (_second < 0 || 60 <= _second));\n      },\n\n      /**\n       * 全角カタカナチェック\n       * @param  _inpText  文字列\n       * @return  boolean true:OK, false:NG\n       */\n      _isAllkana: function (_inpText) {\n        for (let i = 0; i < _inpText.length; i++) {\n          //if(_inpText.charAt(i) < 'ア' || _inpText.charAt(i) > 'ン'){\n          if (_inpText.charAt(i) < 'ァ' || _inpText.charAt(i) > 'ヶ') {\n            if (_inpText.charAt(i) !== 'ー' && _inpText.charAt(i) !== ' ' && _inpText.charAt(i) !== '　') {\n              return false;\n            }\n          }\n        }\n        return true;\n      },\n\n      /**\n       * 全角ひらがなチェック\n       * @param  _inpText  文字列\n       * @return  boolean true:OK, false:NG\n       */\n      _isAllHiragana: function (_inpText) {\n        for (let i = 0; i < _inpText.length; i++) {\n          if (_inpText.charAt(i) < 'ぁ' || _inpText.charAt(i) > 'ん') {\n            if (_inpText.charAt(i) !== 'ー' && _inpText.charAt(i) !== ' ' && _inpText.charAt(i) !== '　') {\n              return false;\n            }\n          }\n        }\n        return true;\n      },\n\n      /**\n       * EMailチェック\n       * @param  _strEmail  EMAIL\n       * @return  string\n       *      \"\":エラー無し\n       *      \"\"以外:エラー\n       */\n      _isEmailEx: function (_strEmail) {\n        const emailPat = /^(.+)@(.+)$/,\n          specialChars = \"\\\\(\\\\)<>@,;:\\\\\\\\\\\\\\\"\\\\.\\\\[\\\\]\",\n          validChars = \"[^\\\\s\" + specialChars + \"]\",\n          // quotedUser=\"(\\\"[^\\\"]*\\\")\",\n          ipDomainPat = /^\\[(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})]$/,\n          atom = validChars + '+',\n          // word=\"(\" + atom + \"|\" + quotedUser + \")\",\n          // userPat=new RegExp(\"^\" + word + \"(\\\\.\" + word + \")*$\"),\n          domainPat = new RegExp(\"^\" + atom + \"(\\\\.\" + atom + \")*$\"),\n\n          // 最初の「@」で分割\n          matchArray = _strEmail.match(emailPat);\n\n        // 「@」がない\n        if (matchArray === null) {\n          return settings.messages.MAIL_NO_AT;\n        }\n\n        // ユーザーとドメインとして格納\n        // const user=matchArray[1];\n        const domain = matchArray[2];\n\n        // KUMA:携帯用パッチ\n        /*\n        // ユーザー部が無い\n        if (user.match(userPat)==null) {\n            return \"正しくありません(USER).\"+userPat;\n        }\n        */\n        // ドメイン名のIPパターンチェック\n        const IPArray = domain.match(ipDomainPat);\n        if (IPArray !== null) {\n          for (let i = 1; i <= 4; i++) {\n            if (IPArray[i] > 255) {\n              return settings.messages.MAIL_INVALID_IP;\n            }\n          }\n        }\n\n        // ドメイン名パターンチェック\n        const domainArray = domain.match(domainPat);\n        if (domainArray === null) {\n          return settings.messages.MAIL_NO_DOMAIN;\n        }\n\n        const atomPat = new RegExp(atom, \"g\"),\n          domArr = domain.match(atomPat),\n          len = domArr.length;\n\n        // 最後のドメインが2文字か3文字の以外のとき、エラー\n        // ex) jp,comはOK\n        if (domArr[domArr.length - 1].length < 2 || 4 < domArr[domArr.length - 1].length) {\n          return settings.messages.MAIL_INVALID_LOCALE;\n        }\n\n        if (len < 2) {\n          return settings.messages.MAIL_INVALID_DOMAIN;\n        }\n        return \"\";\n      },\n      format: function () {\n        const args = Array.prototype.slice.call(arguments, 0);\n        let message = args.shift();\n        $.each(args, function (index, element) {\n          message = message.replace(new RegExp('\\\\{' + index + '}', 'g'), element);\n        });\n        return message;\n      },\n      join: function (arrErrors, delimiter) {\n        if (delimiter === undefined) delimiter = '\\n';\n        let arrErrorMessages = [];\n        $.each(arrErrors, function (i, error) {\n          if (typeof error === 'string' && error) {\n            arrErrorMessages.push(error);\n          } else {\n            /**\n             *  @namespace error.name フィールド名\n             *  @namespace error.d_name フィールド表示名\n             *  @namespace error.message エラーメッセージ\n             */\n            arrErrorMessages.push((error.d_name ? error.d_name : error.name) + ' : ' + error.message);\n          }\n        });\n        return arrErrorMessages.join(delimiter);\n      }\n    };\n\n    if (methods[method]) {\n      return methods[method].apply(this, Array.prototype.slice.call(arguments, 1));\n    } else if (typeof method === 'object' || !method) {\n      return methods.init.apply(this, arguments);\n    } else {\n      $.error('Method \"' + method + '\" does not exist in ' + pluginName + ' plugin!');\n    }\n  };\n  /**\n   * デフォルト値\n   * @function external:\"jQuery.fn\".defaults\n   */\n  $.fn[pluginName].defaults = {\n    submit: 'validate',\n    confirm_suffix: '_confirm',\n    zip_suffix: '_after',\n    ymd_suffix_y: '_y',\n    ymd_suffix_m: '_m',\n    ymd_suffix_d: '_d',\n    fields: null,\n    errorType: null,\n    clearError: null,\n    setError: null,\n    focusError: true,\n    focusErrorSpeed: 'fast',\n    // メッセージ定義\n    messages: {\n      VALIDATE_ERROR: '入力に誤りがあります.',\n      // Required\n      REQUIRED: '必須項目です.',\n      REQUIRED_PART: '{0} は必須項目です.',\n      INSUFFICIENT: '不足しています.',\n      INSUFFICIENT_PART: '{0} が不足しています.',\n      CONFIRM: '確認{0}と異なっています.',\n      CONFIRM_FIELD: '項目',\n      // input a numerical value\n      NUMERICAL_VALUE: '数値を入力して下さい.',\n      INTEGER: '整数値を入力して下さい.',\n      INTEGER_PART: '{0} は整数値を入力して下さい.',\n      MIN: '{0} ～ の数値を入力してください.',\n      MAX: '～ {0} の数値を入力してください.',\n      RANGE: '{0} ～ {1} の数値を入力してください.',\n      MIN_LENGTH: '{0}文字以上で入力して下さい.',\n      MAX_LENGTH: '{0}文字以下で入力して下さい.',\n      NUM_LENGTH: '{0}桁の数値を入力してください.',\n      CHECKBOX_MIN: '{0} 個チェックしてください.',\n      CHECKBOX_RANGE: '{0}～{1} 個の間でチェックしてください.',\n      ZENKAKU: '全角で入力してください.',\n      HANKAKU: '半角で入力してください.',\n      ZEN_KANA: '全角カタカナで入力してください.',\n      TEL: '数値-()で入力してください.',\n      ZIP: '[nnn-nnnn]書式で記述してください.',\n      // 日付系\n      DATE: '[YYYY/MM/DD]書式で記述してください.',\n      DATE_EX: '[YYYY/MM/DD] or [YYYY/MM] or [YYYY]書式で記述してください.',\n      DATETIME: '[YYYY/MM/DD hh:mm:ss]書式で記述してください.',\n      TIME: '[hh:mm:ss]書式で記述してください.',\n      TIME_HM: '[hh:mm:ss]書式で記述してください.',\n      DATE_INVALID: '日付が間違っています.',\n      TIME_INVALID: '時間が間違っています.',\n      DATE_PART_Y: '(年)',\n      DATE_PART_M: '(月)',\n      DATE_PART_D: '(日)',\n      // 正規表現系\n      REGEXP_INVALID_PARAM: '正規表現が間違っています.',\n      REGEXP_INVALID_VALUE: '書式が間違っています.',\n      // メール系\n      MAIL_NO_AT: '正しくありません(@).',\n      MAIL_INVALID_IP: '正しくありません(IP).',\n      MAIL_NO_DOMAIN: 'ドメイン名がありません(DOMAIN).',\n      MAIL_INVALID_LOCALE: '正しくありません(LOCALE).',\n      MAIL_INVALID_DOMAIN: 'ドメイン名の書式が誤っています.',\n      // その他\n      NOT_EXISTS_FIELD: 'フィールド名[{0}]が存在しません'\n    }\n  };\n\n})(jQuery, window, document);\n"],"sourceRoot":""}