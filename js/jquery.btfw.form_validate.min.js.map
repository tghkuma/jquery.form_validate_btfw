{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./js/jquery.btfw.form_validate.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","$","window","document","undefined","pluginName","pluginSettings","fn","method","settings","methods","init","options","extend","defaults","this","each","$element","data","func","on","isFunction","destroy","off","dispError","arrErrors","self","eroor","setError","apply","message","length","focusError","field","find","focus","offset","top","innerHeight","animate","scrollTop","focusErrorSpeed","clearError","errorType","clearErrorBootstrap3","clearErrorTb2","clearErrorBootstrap","setErrorBootstrap3","setErrorTb2","setErrorBootstrap","removeClass","nextAll","remove","error_message","attr","addClass","filter","after","form_check","closest","input_group","parent","append","validate","result","getValidateResult","validate_alert","alert","messages","VALIDATE_ERROR","helpers","join","form","fields","isArray","rules","arrRules","$objVal","bValueExists","existsValue","rule","errors","params","arrRuleErrors","slice","split","JSON","parse","e","pushErrors","validateExistsMethods","REQUIRED","validateMethods","concat","zip_ex","objVal","zip_after","zip_suffix","getValue","val","INSUFFICIENT","ymd","year","month","day","b_year","b_month","b_day","objY","ymd_suffix_y","objM","ymd_suffix_m","objD","ymd_suffix_d","push","format","REQUIRED_PART","DATE_PART_Y","DATE_PART_M","DATE_PART_D","INSUFFICIENT_PART","_isInteger","INTEGER_PART","_isDate","DATE_INVALID","confirm","confirmVal","confirm_suffix","CONFIRM","d_name","CONFIRM_FIELD","email","email_error","_isEmailEx","zenkaku","_isZenkaku","ZENKAKU","hankaku","_isHankaku","HANKAKU","zen_katakana","_isAllkana","ZEN_KANA","hiragana","_isAllHiragana","HIRAGANA","tel","_isTel","TEL","minlength","min","Number","MIN_LENGTH","maxlength","max","MAX_LENGTH","numeric","isNumeric","indexOf","NUMERICAL_VALUE","number","numlength","reg_tmp","err_message_tmp","RegExp","test","NUM_LENGTH","INTEGER","MIN","range","RANGE","date","reg","match","$2","$3","$4","DATE","datetime","$6","_isTime","$7","$8","$10","TIME_INVALID","DATETIME","date_ex","DATE_EX","y","$1","$5","time","TIME_HM","TIME","zip","ZIP","checkbox","check","CHECKBOX_RANGE","CHECKBOX_MIN","regexp","err_message","REGEXP_INVALID_VALUE","REGEXP_INVALID_PARAM","ret","type","error","_text","inpText","_value","isNaN","_year","_month","_day","arrMaxMonth","_hour","_minute","_second","_inpText","charAt","_strEmail","atom","validChars","domainPat","matchArray","MAIL_NO_AT","domain","IPArray","MAIL_INVALID_IP","MAIL_NO_DOMAIN","atomPat","domArr","len","MAIL_INVALID_LOCALE","MAIL_INVALID_DMAIN","args","Array","arguments","shift","index","element","replace","delimiter","arrErrorMessages","submit","MAX","jQuery"],"mappings":"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","file":"jquery.btfw.form_validate.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/**\n * パラメータチェックプラグイン\n * (TwitterBootstrap4.x対応)\n * v.1.7\n * https://github.com/tghkuma/jquery.form_validate_btfw\n */\n;( function( $, window, document, undefined ) {\n    'use strict';\n\n    let pluginName = 'formValidate',\n    pluginSettings = pluginName+'.settings';\n    $.fn[pluginName] = function(method) {\n        let settings,\n        methods = {\n            init:function (options) {\n                settings = $.extend({}, $.fn[pluginName].defaults, options);\n                return this.each(function () {\n                    let $element = $(this);\n                    $element.data(pluginSettings, settings);\n                    // イベント登録処理\n                    let event_names = ['submit'];\n                    $.each(event_names, function(){\n                        let func = settings[this];\n                        if (typeof func === 'string') {\n                            $element.on(this + '.' + pluginName, function () {\n                                return $element[pluginName](func);\n                            });\n                        }\n                        else if ($.isFunction(func)) {\n                            $element.on(this + '.' + pluginName, func);\n                        }\n                    });\n                });\n            },\n            destroy : function( ) {\n                return this.each(function(){\n                    let $element = $(this);\n                    // イベント削除処理\n                    let event_names = ['submit'];\n                    $.each(event_names, function(){\n                        $element.off(this + '.' + pluginName);\n                    });\n                })\n            },\n            /**\n             * エラー表示処理\n             * @param arrErrors\n             */\n            dispError:function (arrErrors) {\n                settings = $(this).data(pluginSettings);\n                let self = this;\n                $.each(arrErrors, function(i, eroor){\n                    methods.setError.apply(self, [eroor.name, eroor.message]);\n                });\n                if (0 < arrErrors.length && settings.focusError){\n                    // 最初のエラーにフォーカス\n                    methods.focusError.apply(this, [arrErrors[0].name]);\n                }\n            },\n\n            /**\n             * 指定のエラーにフォーカス\n             * @param name\n             */\n            focusError:function (name) {\n                settings = $(this).data(pluginSettings);\n                let field = $(this).find(\"*[name='\" + name + \"']\");\n                $(field).focus();\n                let p = $(field).offset().top - $(window).innerHeight()/2;\n                if (p < 0){\n                    p = 0;\n                }\n                if ($.fn.animate !== undefined) {\n                    $('html,body').animate({ scrollTop: p }, settings.focusErrorSpeed);\n                }\n                else {\n                    $('html,body').scrollTop(p);\n                }\n            },\n\n            /**\n             * エラークリア処理\n             * @param name 未指定時全て\n             */\n            clearError:function (name) {\n                settings = $(this).data(pluginSettings);\n                if ($.isFunction(settings.clearError)){\n                    settings.clearError.apply(this, [name]);\n                }\n                else if (settings.errorType === 'bs3'){\n                    methods.clearErrorBootstrap3.apply(this, [name]);\n                }\n                else if (settings.errorType === 'tb2'){\n                    methods.clearErrorTb2.apply(this, [name]);\n                }\n                else{\n                    methods.clearErrorBootstrap.apply(this, [name]);\n                }\n                return this;\n            },\n\n            /**\n             * 指定箇所エラー表示処理\n             * @param name\n             * @param message\n             */\n            setError:function (name, message) {\n                settings = $(this).data(pluginSettings);\n                if ($.isFunction(settings.setError)){\n                    settings.setError.apply(this, [name, message]);\n                }\n                else if (settings.errorType === 'bs3'){\n                    methods.setErrorBootstrap3.apply(this, [name, message]);\n                }\n                else if (settings.errorType === 'tb2'){\n                    methods.setErrorTb2.apply(this, [name, message]);\n                }\n                else{\n                    methods.setErrorBootstrap.apply(this, [name, message]);\n                }\n                return this;\n            },\n\n            /**\n             * エラークリア処理\n             * (Bootstrap4レイアウト)\n             * @param name 項目名(未指定時全て)\n             */\n            clearErrorBootstrap:function (name) {\n                if (name){\n                    let field = $(this).find(\"*[name='\" + name + \"']\");\n                    $(field).removeClass('is-invalid')\n                        .nextAll('.invalid-feedback').remove();\n                }\n                else{\n                    $(this).find('.is-invalid')\n                        .removeClass('is-invalid')\n                        .nextAll('.invalid-feedback').remove();\n                }\n                return this;\n            },\n\n            /**\n             * 指定箇所エラー表示処理\n             * (Bootstrap4レイアウト)\n             * @param name\n             * @param message\n             */\n            setErrorBootstrap:function (name, message) {\n                let field = $(this).find(\"*[name='\" + name + \"']\");\n                let error_message = '<div class=\"invalid-feedback\">' + message + '</div>';\n\n                if (field.attr('type')!=='radio' && field.attr('type')!=='checkbox'){\n                    $(field).addClass('is-invalid');\n                    $(field).filter(':last').after(error_message);\n                }\n                else{\n                    let form_check = $(field).closest('.form-check').addClass('is-invalid');\n                    $(form_check).filter(':last').after(error_message);\n                }\n                return this;\n            },\n\n            /**\n             * エラークリア処理\n             * (Bootstrap3レイアウト)\n             * @param name 項目名(未指定時全て)\n             */\n            clearErrorBootstrap3:function (name) {\n                if (name){\n                    let field = $(this).find(\"*[name='\" + name + \"']\");\n                    $(field).closest('.form-group')\n                        .removeClass('has-error')\n                        .find('.error_message').remove();\n                }\n                else{\n                    $(this).find('.form-group')\n                        .removeClass('has-error')\n                        .find('.error_message').remove();\n                }\n                return this;\n            },\n\n            /**\n             * 指定箇所エラー表示処理\n             * (Bootstrap3レイアウト)\n             * @param name\n             * @param message\n             */\n            setErrorBootstrap3:function (name, message) {\n                let field = $(this).find(\"*[name='\" + name + \"']\");\n\n                let error_message = '<span class=\"help-block error_message\">' + message + '</span>';\n                $(field).closest('.form-group').addClass('has-error');\n                if (field.attr('type')!=='radio' && field.attr('type')!=='checkbox'){\n                    let input_group = $(field).closest('.input-group');\n                    if ($(input_group).length !== 0){\n                        $(input_group).after(error_message);\n                    }\n                    else{\n                        $(field).filter(':last').after(error_message);\n                    }\n                }\n                else{\n                    $(field).filter(':last').parent().after(error_message);\n                }\n                return this;\n            },\n\n            /**\n             * エラークリア処理\n             * (TwitterBootstrap2.xレイアウト)\n             * @param name 項目名(未指定時全て)\n             */\n            clearErrorTb2:function (name) {\n                if (name){\n                    let field = $(this).find(\"*[name='\" + name + \"']\");\n                    $(field).closest('.control-group')\n                        .removeClass('error')\n                        .find('.error_message').remove();\n                }\n                else{\n                    $(this).find('.control-group')\n                        .removeClass('error')\n                        .find('.error_message').remove();\n                }\n                return this;\n            },\n\n            /**\n             * 指定箇所エラー表示処理\n             * (TwitterBootstrap2.xレイアウト)\n             * @param name\n             * @param message\n             */\n            setErrorTb2:function (name, message) {\n                let field = $(this).find(\"*[name='\" + name + \"']\");\n                $(field).closest('.control-group').addClass('error');\n                $(field).closest('.controls').append('<div class=\"help-block error_message\">' + message + '</div>');\n                return this;\n            },\n\n            /**\n             * パラメータチェック\n             */\n            validate:function (options) {\n                settings = $.extend($(this).data(pluginSettings), options);\n\n                methods.clearError.apply(this);\n                let result = true;\n                let arrErrors = methods.getValidateResult.apply(this, [settings]);\n                if (0 < arrErrors.length) {\n                    methods.dispError.apply(this, [arrErrors]);\n                    result = false;\n                }\n                if ($.isFunction(settings.result)){\n                    result = settings.result.apply(this, [result, arrErrors]);\n                }\n                return result;\n            },\n\n            /**\n             * パラメータチェック\n             * (エラー時アラート)\n             */\n            validate_alert:function (options) {\n                settings = $.extend($(this).data(pluginSettings), options);\n\n                let result = true;\n                let arrErrors = methods.getValidateResult.apply(this, [settings]);\n                if (0 < arrErrors.length) {\n                    alert(settings.messages.VALIDATE_ERROR+'\\n' + helpers.join(arrErrors));\n                    if (settings.focusError){\n                        // 最初のエラーにフォーカス\n                        methods.focusError.apply(this, [arrErrors[0].name]);\n                    }\n                    result = false;\n                }\n                if ($.isFunction(settings.result)){\n                    result = settings.result.apply(this, [result, arrErrors]);\n                }\n                return result;\n            },\n\n            /**\n             * パラメータチェック結果取得\n             */\n            getValidateResult:function (options) {\n                let form = this;\n                settings = $.extend($(this).data(pluginSettings), options);\n\n                let arrErrors = [];\n                let fields = settings.fields;\n\n                if (!$.isArray(fields)) {\n                    return arrErrors;\n                }\n\n                $.each (fields, function(i, field){\n                    if (!field.rules) {\n                        return true;\n                    }\n\n                    // パラメータチェック方法\n                    let arrRules = field.rules;\n                    if (!$.isArray(arrRules)) {\n                        arrRules = [arrRules];\n                    }\n                    // パラメータ値\n                    let $objVal = $(form).find(\"*[name='\" + field.name + \"']\");\n                    // 値存在チェック\n                    let bValueExists = helpers.existsValue($objVal);\n\n                    // 各パラメータのチェック処理\n                    $.each(arrRules, function(i, rule){\n                        let arrRuleErrors = [];\n                        let errors;\n                        let params;\n\n                        //------------------\n                        // ルール分岐\n                        //------------------\n                        // ルールが配列\n                        // [ 'ルール名', [<パラメータ配列>]]\n                        // [ 'ルール名', <パラメータ1>, <パラメータ2>..., <パラメータn> ]\n                        if ($.isArray(rule)) {\n                            if (rule.length === 0){\n                                return;\n                            }\n                            else if (rule.length === 2){\n                                params = rule[1];\n                                if (!$.isArray(params)){\n                                    params = [params];\n                                }\n                            }\n                            else if (rule.length >= 3){\n                                params = rule.slice(1);\n                            }\n                            rule = rule[0];\n                        }\n                        // ルールがObject\n                        // { rule:'ルール名', params:[<パラメータ配列>]}\n                        else if (typeof rule === 'object') {\n                            if (!rule.rule){\n                                return;\n                            }\n                            if (rule.params){\n                                params = rule.params;\n                                if (!$.isArray(params)){\n                                    params = [params];\n                                }\n                            }\n                            rule = rule.rule;\n                        }\n                        // ルールが文字列(旧仕様)\n                        else if (typeof rule === 'string') {\n                            // パラメータ解析処理\n                            params = rule.split(':', 2);\n                            if (params[0]) {\n                                rule = params[0];\n                            }\n                            if (params[1]) {\n                                try{\n                                    params = JSON.parse(params[1]);\n                                }\n                                catch (e){\n                                    params = params[1].split(',');\n                                }\n                                if (!$.isArray(params)){\n                                    params = [params];\n                                }\n                            } else {\n                                params = [];\n                            }\n                        }\n\n                        // 独自チェック関数\n                        if ($.isFunction(rule)) {\n                            errors = rule.apply(form, [field, $objVal, params, settings]);\n                            helpers.pushErrors(arrRuleErrors, field, errors);\n                        }\n                        else if (typeof rule === 'string') {\n                            // 指定フィールドに値が入っているとき\n                            if (bValueExists){\n                                if (validateExistsMethods[rule]) {\n                                    errors = validateExistsMethods[rule].apply(form, [field, $objVal, params, settings]);\n                                    helpers.pushErrors(arrRuleErrors, field, errors);\n                                }\n                                else {\n                                    //$.error( 'validateExistsMethod \"' +  rule + '\" does not exist in '+pluginName+' plugin!');\n                                }\n                            }\n                            // 指定フィールドに値が入っていないとき\n                            else {\n                                // 必須項目チェック\n                                if (rule === 'required'){\n                                    helpers.pushErrors(arrRuleErrors, field, settings.messages.REQUIRED);\n                                }\n                                else if (rule === 'checkbox'){\n                                    errors = validateExistsMethods[rule].apply(form, [field, $objVal, params, settings]);\n                                    helpers.pushErrors(arrRuleErrors, field, errors);\n                                }\n                                else if (validateMethods[rule]) {\n                                    errors = validateMethods[rule].apply(form, [field, $objVal, params, settings]);\n                                    helpers.pushErrors(arrRuleErrors, field, errors);\n                                }\n                                else {\n                                    //$.error( 'validateMethods \"' +  rule + '\" does not exist in '+pluginName+' plugin!');\n                                }\n                            }\n                        }\n\n                        // エラー時追加\n                        if (arrRuleErrors && 0 < arrRuleErrors.length) {\n                            arrErrors = arrErrors.concat(arrRuleErrors);\n                        }\n                    });\n                    return true;\n                });\n                return arrErrors;\n            }\n        };\n\n        let validateMethods = {\n            /*\n             * 郵便番号の4桁部分が入力された場合\n             * 3桁部が入力必須になるチェック\n             */\n            zip_ex:function (field, objVal, params, settings) {\n                let zip_after = $(this).find(\"*[name='\" + field.name + settings.zip_suffix + \"']\");\n                if (objVal && helpers.getValue(objVal) && (!zip_after || !zip_after.val()))\n                    return settings.messages.INSUFFICIENT;\n                return null;\n            },\n\n            /**\n             * 年月日チェック\n             * フォーム name+\"_y\", name+\"_m\", name+\"_d\"のチェックを行う\n             */\n            ymd : function(field, objVal, params){\n                // 変数宣言\n                let arrErrors = [];\n\n                // 日付オブジェクト取得\n                let year = null, month = null, day = null;\n                let b_year = false, b_month = false, b_day = false;\n                let objY = $(this).find(\"*[name='\"+field.name+settings.ymd_suffix_y+\"']\");\n                let objM = $(this).find(\"*[name='\"+field.name+settings.ymd_suffix_m+\"']\");\n                let objD = $(this).find(\"*[name='\"+field.name+settings.ymd_suffix_d+\"']\");\n                if (objY && objY.val() !== ''){\n                    b_year = true;\n                    year = objY.val();\n                }\n                if (objM && objM.val() !== ''){\n                    b_month = true;\n                    month = objM.val();\n                }\n                if (objD && objD.val() !== ''){\n                    b_day = true;\n                    day = objD.val();\n                }\n\n                // 日付必須チェック\n                if (params[0] === 'required'){\n                    if(!b_year)\n                        arrErrors.push(helpers.format(settings.messages.REQUIRED_PART, settings.messages.DATE_PART_Y));\n                    if(!b_month)\n                        arrErrors.push(helpers.format(settings.messages.REQUIRED_PART, settings.messages.DATE_PART_M));\n                    if(!b_day)\n                        arrErrors.push(helpers.format(settings.messages.REQUIRED_PART, settings.messages.DATE_PART_D));\n                }\n                else{\n                    // 日付の年月日が一部のみ入力されているとき\n                    if ((b_year || b_month || b_day) && !(b_year && b_month && b_day) ){\n                        if(!b_year)\n                            arrErrors.push(helpers.format(settings.messages.INSUFFICIENT_PART, settings.messages.DATE_PART_Y));\n                        if(!b_month)\n                            arrErrors.push(helpers.format(settings.messages.INSUFFICIENT_PART, settings.messages.DATE_PART_M));\n                        if(!b_day)\n                            arrErrors.push(helpers.format(settings.messages.INSUFFICIENT_PART, settings.messages.DATE_PART_D));\n                    }\n                }\n                // 年数値チェック\n                if(b_year && !helpers._isInteger(year)) {\n                    arrErrors.push(helpers.format(settings.messages.INTEGER_PART, settings.messages.DATE_PART_Y));\n                }\n                // 月数値チェック\n                if(b_month && !helpers._isInteger(month)) {\n                    arrErrors.push(helpers.format(settings.messages.INTEGER_PART, settings.messages.DATE_PART_M));\n                }\n                // 日数値チェック\n                if(b_day && !helpers._isInteger(day)) {\n                    arrErrors.push(helpers.format(settings.messages.INTEGER_PART, settings.messages.DATE_PART_D));\n                }\n\n                // 年月日チェック\n                if (arrErrors.length === 0 && !helpers._isDate(year, month, day)) {\n                    arrErrors.push(helpers.format(settings.messages.DATE_INVALID));\n                }\n\n                return arrErrors;\n            }\n        };\n\n        /*\n        * パラメータチェック群\n        *\n        * @param field パラメータ名\n        * @param rule チェックコマンド\n        * @param objVal 値オブジェクト\n        *\n        * @return\tstring|null エラーメッセージ 文字列 or 配列\n        */\n        let validateExistsMethods = {\n            /*\n            * 確認項目\n            */\n            confirm : function(field, objVal, params){\n                let confirmVal = $(this).find(\"*[name='\"+field.name+settings.confirm_suffix+\"']\");\n                if(!objVal || !confirmVal || helpers.getValue(objVal) !== confirmVal.val())\n                    return helpers.format(settings.messages.CONFIRM, (field.d_name ? field.d_name:settings.messages.CONFIRM_FIELD));\n                return null;\n            },\n            /*\n            * E-Mailチェック\n            */\n            email : function(field, objVal){\n                let val = helpers.getValue(objVal);\n                if (val) {\n                    let email_error = helpers._isEmailEx(val);\n                    if (email_error !== '') {\n                        return email_error;\n                    }\n                }\n                return null;\n            },\n            /*\n            * 全角\n            */\n            zenkaku : function(field, objVal){\n                if (!helpers._isZenkaku(helpers.getValue(objVal))){\n                    return settings.messages.ZENKAKU;\n                }\n                return null;\n            },\n            /*\n            * 半角\n            */\n            hankaku : function(field, objVal){\n                if (!helpers._isHankaku(helpers.getValue(objVal))){\n                    return settings.messages.HANKAKU;\n                }\n                return null;\n            },\n            /*\n            * 全角カタカナ\n            */\n            zen_katakana : function(field, objVal){\n                if (!helpers._isAllkana(helpers.getValue(objVal))){\n                    return settings.messages.ZEN_KANA;\n                }\n                return null;\n            },\n            /*\n            * 全角ひらがな\n            */\n            hiragana : function(field, objVal){\n                if (!helpers._isAllHiragana(helpers.getValue(objVal))){\n                    return settings.messages.HIRAGANA;\n                }\n                return null;\n            },\n            /*\n            * 電話番号\n            */\n            tel : function(field, objVal){\n                if (!helpers._isTel(helpers.getValue(objVal))){\n                    return settings.messages.TEL;\n                }\n                return null;\n            },\n            /*\n            * 最小文字数\n            */\n            minlength : function(field, objVal, params){\n                let min= Number(params[0]);\n                if (helpers.getValue(objVal).length<min)\n                    return helpers.format(settings.messages.MIN_LENGTH, min);\n                return null;\n            },\n            /*\n            * 最大文字数\n            */\n            maxlength : function(field, objVal, params){\n                let max= Number(params[0]);\n                if (max<helpers.getValue(objVal).length)\n                    return helpers.format(settings.messages.MAX_LENGTH, max);\n                return null;\n            },\n            /*\n            * 数値チェック\n            */\n            numeric : function(field, objVal){\n                let val = helpers.getValue(objVal);\n                if(!$.isNumeric(val) || (val.indexOf(' ') !== -1)){\n                    return settings.messages.NUMERICAL_VALUE;\n                }\n                return null;\n            },\n            /*\n             * 数値チェック(エイリアス)\n             */\n            number : function(field, objVal){\n                return validateExistsMethods.numeric.apply(this, [field, objVal]);\n            },\n            /*\n            * 数値桁数チェック\n            */\n            numlength : function(field, objVal, params){\n                let val = helpers.getValue(objVal),\n                reg_tmp = params[0],\n                err_message_tmp = params[0];\n                if (params[1]){\n                    reg_tmp += \",\"+params[1];\n                    err_message_tmp += \"～\"+params[1];\n                }\n                let reg = new RegExp(\"^\\\\d{\"+reg_tmp+\"}$\");\n                if (!reg.test(val)){\n                    return helpers.format(settings.messages.NUM_LENGTH, err_message_tmp);\n                }\n                return null;\n            },\n            /*\n            * 最小値\n            */\n            min : function(field, objVal, params){\n                let val = helpers.getValue(objVal);\n                if(!helpers._isInteger(val)) {\n                    return settings.messages.INTEGER;\n                }\n                let min= Number(params[0]);\n                if (val<min)\n                    return helpers.format(settings.messages.MIN, min);\n                return null;\n            },\n            /*\n            * 最大値\n            */\n            max : function(field, objVal, params){\n                let val = helpers.getValue(objVal);\n                if(!helpers._isInteger(val)) {\n                    return settings.messages.INTEGER;\n                }\n                let max= Number(params[0]);\n                if (max<val)\n                    return helpers.format(settings.messages.MIN, max);\n                return null;\n            },\n            /*\n            * 数値範囲\n            */\n            range : function(field, objVal, params){\n                let val = helpers.getValue(objVal);\n                if(!helpers._isInteger(val)) {\n                    return settings.messages.INTEGER;\n                }\n                let min= Number(params[0]),\n                    max= Number(params[1]);\n                if (val<min || max<val)\n                    return helpers.format(settings.messages.RANGE, min, max);\n                return null;\n            },\n            /*\n            * 日付\n            */\n            date : function(field, objVal){\n                let val = helpers.getValue(objVal),\n                    reg = new RegExp(\"^((\\\\d{1,4})[/-](\\\\d{1,2})[/-](\\\\d{1,2}))$\", \"g\");\n                // 1980/1/2\n                //\t\t\t\t↓\n                // 1980/1/2,1980/1/2,1980,1,2\n                if(!val.match(reg)){\n                    return settings.messages.DATE;\n                }\n                // 年月日チェック\n                if(!helpers._isDate(RegExp.$2, RegExp.$3, RegExp.$4)){\n                    return settings.messages.DATE_INVALID;\n                }\n                return null;\n            },\n            /*\n            * 日時チェック\n            * [YYYY-MM-DD hh:mm:ss]または[YYYY/MM/DD]の書式でチェックする\n            */\n            datetime : function(field, objVal){\n                let val = helpers.getValue(objVal),\n                    reg = new RegExp(\"^((\\\\d{1,4})[/-](\\\\d{1,2})[/-](\\\\d{1,2}))( ((\\\\d{1,2}):(\\\\d{1,2})(:(\\\\d{1,2}))?))?$\", 'g');\n                // 1980/1/2 24:12:11\n                //      ↓\n                // 1980/1/2 23:12:11,1980/1/2,1980,1,2, 24:12:11,23:12:11,23,12,11\n                if(!val.match(reg)){\n                    return settings.messages.DATETIME;\n                }\n                // 年月日チェック\n                if(!helpers._isDate(RegExp.$2, RegExp.$3, RegExp.$4)){\n                    return settings.messages.DATE_INVALID;\n                }\n                if(RegExp.$6 && !helpers._isTime(RegExp.$7, RegExp.$8, RegExp.$10)){\n                    return settings.messages.TIME_INVALID;\n                }\n                return null;\n            },\n            /*\n            * 日付チェック\n            * [YYYY/MM/DD] or [YYYY/MM] or [YYYY]の書式でチェックする\n            */\n            date_ex : function(field, objVal){\n                let val = helpers.getValue(objVal),\n                    reg = new RegExp(\"^(\\\\d{1,4})([/-](\\\\d{1,2})([/-](\\\\d{1,2}))?)?$\");\n                // 1980/1/2\n                //      ↓\n                // 1980/1/2,1980/1/2,1980,1,2\n                if(!val.match(reg)){\n                    return settings.messages.DATE_EX;\n                }\n                // 年月日チェック\n                let y = RegExp.$1,\n                    m = RegExp.$3 ? RegExp.$3 : 1,\n                    d = RegExp.$5 ? RegExp.$5 : 1;\n                if(!helpers._isDate(y, m, d)){\n                    return settings.messages.DATE_INVALID;\n                }\n                return null;\n            },\n            /*\n            * 時間チェック\n            * [hh:mm:ss]の書式でチェックする\n            */\n            time : function(field, objVal, params){\n                let val = helpers.getValue(objVal),\n                    reg;\n                if (params[0]===\"hm\") {\n                    reg = new RegExp(\"^(\\\\d{1,2}):(\\\\d{1,2})$\", \"g\");\n                    if(!val.match(reg)){\n                        return settings.messages.TIME_HM;\n                    }\n                    if(!helpers._isTime(RegExp.$1, RegExp.$2, 0)){\n                        return settings.messages.TIME_INVALID;\n                    }\n                }\n                else {\n                    reg = new RegExp(\"^(\\\\d{1,2}):(\\\\d{1,2}):(\\\\d{1,2})$\", \"g\");\n                    if(!val.match(reg)){\n                        return settings.messages.TIME;\n                    }\n                    if(!helpers._isTime(RegExp.$1, RegExp.$2, RegExp.$3)){\n                        return settings.messages.TIME_INVALID;\n                    }\n                }\n                return null;\n            },\n            /*\n             * 郵便番号\n             */\n            zip : function(field, objVal){\n                let val = helpers.getValue(objVal),\n                    reg = new RegExp(\"^\\\\d{1,3}-\\\\d{1,4}$\", \"g\");\n                if(!val.match(reg)){\n                    return settings.messages.ZIP;\n                }\n                return null;\n            },\n            /*\n             * チェックボックス\n             */\n            checkbox : function(field, objVal, params){\n                let check = objVal.filter(\":checked\").length,\n                    min= Number(params[0]), max;\n                if (2<=params.length){\n                    max = Number(params[1]);\n                    if (check<min || max<check)\n                        return helpers.format(settings.messages.CHECKBOX_RANGE, min, max);\n                }\n                else {\n                    if (check<min)\n                        return helpers.format(settings.messages.CHECKBOX_MIN, min);\n                }\n            },\n\n            /*\n             * 正規表現チェック\n             * @param string field フィールド名\n             * @param object objVal 値\n             * @param string|array params 正規表現パラメータ\n             *        params[0]:正規表現(文字列 or 正規表現クラス)\n             *        params[1]:正規表現フラグ(オプション)\n             *        params[1 or 2]:エラーメッセージ(オプション)\n             */\n            regexp : function(field, objVal, params){\n                let val = helpers.getValue(objVal),\n                    reg, err_message;\n                if(!$.isArray(params)){\n                    params = [params];\n                }\n                try{\n                    if (typeof params[0] === 'string'){\n                        reg = new RegExp(params[0], params[1] ? params[1] : undefined);\n                        err_message = params[2];\n                    }\n                    else{\n                        reg = params[0];\n                        err_message = params[1];\n                    }\n                    if (!reg.test(val))\n                        return (err_message ? err_message:settings.messages.REGEXP_INVALID_VALUE);\n                }\n                catch(e){\n                    return settings.messages.REGEXP_INVALID_PARAM;\n                }\n                return null;\n            }\n        };\n\n        let helpers = {\n            /**\n             * 値が存在するか？\n             *\n             * @param objVal 値Object\n             * @returns true:存在する\n             */\n            existsValue : function(objVal){\n                let ret;\n                if (!objVal) {\n                    ret = false;\n                }\n                else if (objVal.attr('type')==='checkbox'){\n                    ret = (0<objVal.filter(\":checked\").length);\n                }\n                else{\n                    ret = !!helpers.getValue(objVal);\n                }\n                return ret;\n            },\n            /**\n             * 値を返す\n             *\n             * @param objVal 値Object\n             * @returns 値\n             */\n            getValue : function(objVal){\n                let type = objVal.attr('type'), val;\n                if (type === 'radio'){\n                    val = objVal.filter(':checked').val();\n                }\n                else if(type !== 'checkbox'){\n                    val = objVal.val();\n                }\n                else{\n                    val = [];\n                    objVal.filter(':checked').each(function () {\n                        val.push($(this).val());\n                    });\n                }\n                return val;\n            },\n            /**\n             * エラー配列付加\n             *\n             * @param\tarrErrors\tエラー情報\n             * @param\tfield\t\tフィールド情報\n             * @param\terrors\t\t追加エラー情報\n             *\n             * @return\tarray arrErrors\n             */\n            pushErrors : function(arrErrors, field, errors){\n                if (typeof errors === 'string' && errors) {\n                    arrErrors.push({name:field.name, d_name:field.d_name, message:errors});\n                }\n                else if($.isArray(errors)){\n                    $.each(errors, function(i, error){\n                        arrErrors.push({name:field.name, d_name:field.d_name, message:error});\n                    });\n                }\n                return arrErrors;\n            },\n            /**\n            * 半角英数字チェック\n            *\n            * @param    _text\t文字列\n            *\n            * @return\tboolean true:OK, false:NG\n            */\n            _isHankaku : function(_text) {\n                // 半角以外が存在する場合\n                return !(/[^\\x20-\\x7E]/).test(_text);\n            },\n\n            /**\n            * 全角チェック\n            *\n            * @param    _text\t文字列\n            *\n            * @return\tboolean true:OK, false:NG\n            */\n            _isZenkaku : function(_text) {\n                return !(/[\\w\\-\\.]/).test(_text);\n            },\n\n            /**\n            * 電話番号チェック\n            *\n            * @param\tinpText\t文字列\n            *\n            * @return\tboolean true:OK, false:NG\n            */\n            _isTel : function(inpText) {\n                // 「0～9」「-」「(」「)」以外があったらエラー\n                return !(/[^0-9\\-\\(\\)]/).test(inpText);\n            },\n\n            /**\n            *\t整数チェック\n            *\n            * @param\t_value\t値\n            *\n            * @return\tboolean true:OK, false:NG\n            */\n            _isInteger : function(_value){\n                let test = /^(-\\d+|\\d*)$/.test(''+_value);\n                return test && !isNaN(_value);\n            },\n\n            /**\n            *\t年月日整合性チェック\n            *\n            * @param\t_year\t年\n            * @param\t_month\t月\n            * @param\t_day\t日\n            *\n            * @return\tboolean true:OK, false:NG\n            */\n            _isDate : function(_year, _month, _day) {\n                //==========================\n                // 年範囲チェック\n                //==========================\n                if(_year < 1900 || 9999 < _year){\n                    return false;\n                }\n                //==========================\n                // 月範囲チェック\n                //==========================\n                if(_month < 1 || 12 < _month){\n                    return false;\n                }\n                //==========================\n                // 日範囲チェック\n                //==========================\n                // 最小値\n                if(_day < 1){\n                    return false;\n                }\n                // 最大値\n                let arrMaxMonth = [31,28,31,30,31,30,31,31,30,31,30,31];\n                // 2月うるう年補正\n                if((_year % 4 === 0 && _year % 100 !== 0) || _year % 400 === 0){\n                    arrMaxMonth[1] = 29;\n                }\n                return !(arrMaxMonth[_month-1] < _day);\n            },\n\n            /**\n            *\t時分整合性チェック\n            *\n            * @param\t_hour\t時\n            * @param\t_minute\t分\n            * @param\t_second\t秒(null=未チェック)\n            *\n            * @return\tboolean true:OK, false:NG\n            */\n            _isTime : function(_hour, _minute, _second){\n                //====================\n                //\t時範囲チェック\n                //====================\n                if(_hour < 0 || 24 <= _hour){\n                    return false;\n                }\n                //=====================\n                //\t分範囲チェック\n                //=====================\n                if(_minute < 0 || 60 <= _minute){\n                    return false;\n                }\n                //=====================\n                //\t秒範囲チェック\n                //=====================\n                return !(_second !== null && (_second < 0 || 60 <= _second));\n            },\n\n            /**\n            *\t全角カタカナチェック\n            *\n            * @param\t_inpText\t文字列\n            *\n            * @return\tboolean true:OK, false:NG\n            */\n            _isAllkana : function(_inpText){\n                for(let i=0; i<_inpText.length; i++){\n                    //if(_inpText.charAt(i) < 'ア' || _inpText.charAt(i) > 'ン'){\n                    if(_inpText.charAt(i) < 'ァ' || _inpText.charAt(i) > 'ヶ'){\n                        if(_inpText.charAt(i) !== 'ー' && _inpText.charAt(i) !== ' ' && _inpText.charAt(i) !== '　'){\n                            return false;\n                        }\n                    }\n                }\n                return true;\n            },\n\n            /**\n            *\t全角ひらがなチェック\n            *\n            * @param\t_inpText\t文字列\n            *\n            * @return\tboolean true:OK, false:NG\n            */\n            _isAllHiragana : function(_inpText){\n                for(let i=0; i<_inpText.length; i++){\n                    if(_inpText.charAt(i) < 'ぁ' || _inpText.charAt(i) > 'ん'){\n                        if(_inpText.charAt(i) !== 'ー' && _inpText.charAt(i) !== ' ' && _inpText.charAt(i) !== '　'){\n                            return false;\n                        }\n                    }\n                }\n                return true;\n            },\n\n            /**\n            *\tEMailチェック\n            *\n            * @param\t_strEmail\tEMAIL\n            *\n            * @return\tstring\n            *           \"\":エラー無し\n            *\t\t\t\"\"以外:エラー\n            */\n            _isEmailEx : function(_strEmail) {\n                let emailPat=/^(.+)@(.+)$/,\n                specialChars=\"\\\\(\\\\)<>@,;:\\\\\\\\\\\\\\\"\\\\.\\\\[\\\\]\",\n                validChars=\"[^\\\\s\" + specialChars + \"]\",\n                // quotedUser=\"(\\\"[^\\\"]*\\\")\",\n                ipDomainPat=/^\\[(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\]$/,\n                atom=validChars + '+',\n                // word=\"(\" + atom + \"|\" + quotedUser + \")\",\n                // userPat=new RegExp(\"^\" + word + \"(\\\\.\" + word + \")*$\"),\n                domainPat=new RegExp(\"^\" + atom + \"(\\\\.\" + atom +\")*$\"),\n\n                // 最初の「@」で分割\n                matchArray=_strEmail.match(emailPat);\n\n                // 「@」がない\n                if(matchArray === null) {\n                    return settings.messages.MAIL_NO_AT;\n                }\n\n                // ユーザーとドメインとして格納\n            //\tlet user=matchArray[1];\n                let domain=matchArray[2];\n\n            // KUMA:携帯用パッチ\n            /*\n                // ユーザー部が無い\n                if (user.match(userPat)==null) {\n                    return \"正しくありません(USER).\"+userPat;\n                }\n            */\n                // ドメイン名のIPパターンチェック\n                let IPArray=domain.match(ipDomainPat);\n                if ( IPArray !== null ) {\n                    for ( let i=1; i <= 4; i++ ) {\n                        if ( IPArray[i] > 255 ) {\n                            return settings.messages.MAIL_INVALID_IP;\n                        }\n                    }\n                }\n\n                // ドメイン名パターンチェック\n                let domainArray=domain.match(domainPat);\n                if (domainArray === null) {\n                    return settings.messages.MAIL_NO_DOMAIN;\n                }\n\n                let atomPat=new RegExp(atom,\"g\"),\n                domArr=domain.match(atomPat),\n                len=domArr.length;\n\n                // 最後のドメインが2文字か3文字の以外のとき、エラー\n                // ex) jp,comはOK\n                if (domArr[domArr.length-1].length < 2 || 4 < domArr[domArr.length-1].length) {\n                    return settings.messages.MAIL_INVALID_LOCALE;\n                }\n\n                if (len<2) {\n                    return settings.messages.MAIL_INVALID_DMAIN;\n                }\n                return \"\";\n            },\n            format : function() {\n                let args = Array.prototype.slice.call(arguments, 0);\n                let message = args.shift();\n                $.each(args, function (index, element) {\n                    message = message.replace(new RegExp('\\\\{'+index+'}', 'g'), element);\n                });\n                return message;\n            },\n            join : function(arrErrors, delimiter) {\n                if (delimiter === undefined) delimiter = '\\n';\n                let arrErrorMessages = [];\n                $.each(arrErrors, function(i, error){\n                    if (typeof error === 'string' && error) {\n                        arrErrorMessages.push(error);\n                    }\n                    else {\n                        /**\n                         *  @namespace error.name フィールド名\n                         *  @namespace error.d_name フィールド表示名\n                         *  @namespace error.message エラーメッセージ\n                         */\n                        arrErrorMessages.push((error.d_name ? error.d_name: error.name)+' : '+error.message);\n                    }\n                });\n                return arrErrorMessages.join(delimiter);\n            }\n        };\n\n        if (methods[method]) {\n            return methods[method].apply(this, Array.prototype.slice.call(arguments, 1));\n        } else if (typeof method === 'object' || !method) {\n            return methods.init.apply(this, arguments);\n        } else {\n            $.error( 'Method \"' +  method + '\" does not exist in '+pluginName+' plugin!');\n        }\n    };\n    $.fn[pluginName].defaults = {\n        submit: 'validate',\n        confirm_suffix: '_confirm',\n        zip_suffix: '_after',\n        ymd_suffix_y: '_y',\n        ymd_suffix_m: '_m',\n        ymd_suffix_d: '_d',\n        fields: null,\n        errorType:null,\n        clearError:null,\n        setError:null,\n        focusError: true,\n        focusErrorSpeed: 'fast',\n        // メッセージ定義\n        messages: {\n            VALIDATE_ERROR:'入力に誤りがあります.',\n            // Required\n            REQUIRED:'必須項目です.',\n            REQUIRED_PART:'{0} は必須項目です.',\n            INSUFFICIENT:'不足しています.',\n            INSUFFICIENT_PART:'{0} が不足しています.',\n            CONFIRM:'確認{0}と異なっています.',\n            CONFIRM_FIELD:'項目',\n            // input a numerical value\n            NUMERICAL_VALUE:'数字を入力して下さい.',\n            INTEGER:'整数値を入力して下さい.',\n            INTEGER_PART:'{0} は整数値を入力して下さい.',\n            MIN:'{0} ～ の数字を入力してください.',\n            MAX:'～ {0} の数字を入力してください.',\n            RANGE:'{0} ～ {1} の数字を入力してください.',\n            MIN_LENGTH:'{0}文字以上で入力して下さい.',\n            MAX_LENGTH:'{0}文字以下で入力して下さい.',\n            NUM_LENGTH:'{0}桁の数字を入力してください.',\n            CHECKBOX_MIN:'{0} 個チェックしてください.',\n            CHECKBOX_RANGE:'{0}～{1} 個の間でチェックしてください.',\n            ZENKAKU:'全角で入力してください.',\n            HANKAKU:'半角で入力してください.',\n            ZEN_KANA:'全角カタカナで入力してください.',\n            TEL:'数字-()で入力してください.',\n            ZIP:'[nnn-nnnn]書式で記述してください.',\n            // 日付系\n            DATE:'[YYYY/MM/DD]書式で記述してください.',\n            DATE_EX:'[YYYY/MM/DD] or [YYYY/MM] or [YYYY]書式で記述してください.',\n            DATETIME:'[YYYY/MM/DD hh:mm:ss]書式で記述してください.',\n            TIME:'[hh:mm:ss]書式で記述してください.',\n            TIME_HM:'[hh:mm:ss]書式で記述してください.',\n            DATE_INVALID:'日付が間違っています.',\n            TIME_INVALID:'時間が間違っています.',\n            DATE_PART_Y:'(年)',\n            DATE_PART_M:'(月)',\n            DATE_PART_D:'(日)',\n            // 正規表現系\n            REGEXP_INVALID_PARAM:'正規表現が間違っています.',\n            REGEXP_INVALID_VALUE:'書式が間違っています.',\n            // メール系\n            MAIL_NO_AT:'正しくありません(@).',\n            MAIL_INVALID_IP:'正しくありません(IP).',\n            MAIL_NO_DOMAIN:'ドメイン名がありません(DOMAIN).',\n            MAIL_INVALID_LOCALE:'正しくありません(LOCALE).',\n            MAIL_INVALID_DMAIN:'ドメイン名の書式が誤っています.'\n        }\n    };\n\n})(jQuery, window, document );\n"],"sourceRoot":""}