{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./js/jquery.btfw.form_validate.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","$","window","pluginName","pluginSettings","fn","method","settings","methods","init","options","extend","defaults","this","each","$element","data","func","on","destroy","off","dispError","arrErrors","self","eroor","setError","apply","message","length","focusError","field","find","trigger","offset","top","innerHeight","console","warn","helpers","format","messages","NOT_EXISTS_FIELD","undefined","animate","scrollTop","focusErrorSpeed","clearError","errorType","clearErrorBootstrap3","clearErrorTb2","clearErrorBootstrap","setErrorBootstrap3","setErrorTb2","setErrorBootstrap","removeClass","nextAll","remove","error_message","indexOf","attr","addClass","parent","hasClass","append","filter","after","form_check","closest","input_group","validate","result","getValidateResult","validate_alert","alert","VALIDATE_ERROR","join","form","fields","Array","isArray","rules","arrRules","$objVal","bValueExists","existsValue","rule","errors","params","arrRuleErrors","slice","split","JSON","parse","e","pushErrors","validateExistsMethods","REQUIRED","validateMethods","concat","numeric","objVal","validity","badInput","validationMessage","number","zip_ex","zip_after","zip_suffix","getValue","val","INSUFFICIENT","ymd","year","month","day","b_year","b_month","b_day","objY","ymd_suffix_y","objM","ymd_suffix_m","objD","ymd_suffix_d","push","REQUIRED_PART","DATE_PART_Y","DATE_PART_M","DATE_PART_D","INSUFFICIENT_PART","_isInteger","INTEGER_PART","_isDate","DATE_INVALID","confirm","confirmVal","confirm_suffix","CONFIRM","d_name","CONFIRM_FIELD","email","email_error","_isEmailEx","zenkaku","_isZenkaku","ZENKAKU","hankaku","_isHankaku","HANKAKU","zen_katakana","_isAllkana","ZEN_KANA","hiragana","_isAllHiragana","HIRAGANA","tel","_isTel","TEL","minlength","min","Number","MIN_LENGTH","maxlength","max","MAX_LENGTH","isFinite","NUMERICAL_VALUE","numlength","reg_tmp","err_message_tmp","RegExp","test","NUM_LENGTH","INTEGER","MIN","range","RANGE","date","reg","match","$2","$3","$4","DATE","datetime","$6","_isTime","$7","$8","$10","TIME_INVALID","DATETIME","date_ex","DATE_EX","y","$1","$5","time","TIME_HM","TIME","zip","ZIP","checkbox","check","CHECKBOX_RANGE","CHECKBOX_MIN","regexp","err_message","REGEXP_INVALID_VALUE","REGEXP_INVALID_PARAM","ret","type","error","_text","inpText","_value","isNaN","_year","_month","_day","arrMaxMonth","_hour","_minute","_second","_inpText","charAt","_strEmail","atom","validChars","domainPat","matchArray","MAIL_NO_AT","domain","IPArray","MAIL_INVALID_IP","MAIL_NO_DOMAIN","atomPat","domArr","len","MAIL_INVALID_LOCALE","MAIL_INVALID_DOMAIN","args","arguments","shift","index","element","replace","delimiter","arrErrorMessages","submit","MAX","jQuery","document"],"mappings":"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","file":"jquery.btfw.form_validate.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/**\n * @file パラメータチェックプラグイン\n * (TwitterBootstrap4.x対応)\n * @version 1.7.x\n * @see https://github.com/tghkuma/jquery.form_validate_btfw\n * @copyright {@link https://team-grasshopper.info/ Team-Grasshopper}\n */\n/**\n * @class\n * @name jQuery\n * @namespace jQuery\n * @exports_ $ as jQuery\n */\n(function ($, window) {\n  'use strict';\n\n  /** @default */\n  const pluginName = 'formValidate',\n    pluginSettings = pluginName + '.settings';\n\n  /**\n   * @function\n   * @param {Object} method\n   * @return {Object} jQuery object\n   */\n  $.fn[pluginName] = function (method) {\n    let settings;\n    const methods = {\n      /**\n       * 初期化処理\n       * @param {Object} options オプション\n       * @returns {*}\n       */\n      init: function (options) {\n        settings = $.extend({}, $.fn[pluginName].defaults, options);\n        return this.each(function () {\n          const $element = $(this);\n          $element.data(pluginSettings, settings);\n          // イベント登録処理\n          const event_names = ['submit'];\n          $.each(event_names, function () {\n            const func = settings[this];\n            if (typeof func === 'string') {\n              $element.on(this + '.' + pluginName, function () {\n                return $element[pluginName](func);\n              });\n            } else if (typeof func === \"function\") {\n              $element.on(this + '.' + pluginName, func);\n            }\n          });\n        });\n      },\n      /**\n       *\n       * @returns {*}\n       */\n      destroy: function () {\n        return this.each(function () {\n          const $element = $(this);\n          // イベント削除処理\n          const event_names = ['submit'];\n          $.each(event_names, function () {\n            $element.off(this + '.' + pluginName);\n          });\n        });\n      },\n      /**\n       * エラー表示処理\n       * @param {Object[]} arrErrors エラー一覧\n       * @param {string} arrErrors[].name フィールド名\n       * @param {string} arrErrors[].message エラーメッセージ\n       */\n      dispError: function (arrErrors) {\n        const settings = $(this).data(pluginSettings);\n        const self = this;\n        $.each(arrErrors, function (i, eroor) {\n          methods.setError.apply(self, [eroor.name, eroor.message]);\n        });\n        if (0 < arrErrors.length && settings.focusError) {\n          // 最初のエラーにフォーカス\n          methods.focusError.apply(this, [arrErrors[0].name]);\n        }\n      },\n\n      /**\n       * 指定のエラーにフォーカス\n       * @param {string} name\n       */\n      focusError: function (name) {\n        const settings = $(this).data(pluginSettings);\n        const field = $(this).find(\"*[name='\" + name + \"']\");\n        let p = 0;\n        if (field.length !== 0) {\n          $(field).trigger('focus');\n          p = $(field).offset().top - $(window).innerHeight() / 2;\n          if (p < 0) {\n            p = 0;\n          }\n        } else {\n          console.warn(helpers.format(settings.messages.NOT_EXISTS_FIELD, name));\n        }\n        if ($.fn.animate !== undefined) {\n          $('html,body').animate({scrollTop: p}, settings.focusErrorSpeed);\n        } else {\n          $('html,body').scrollTop(p);\n        }\n      },\n\n      /**\n       * エラークリア処理\n       * @param {string} name 項目名(未指定時全て)\n       */\n      clearError: function (name) {\n        const settings = $(this).data(pluginSettings);\n        if (typeof settings.clearError === 'function') {\n          settings.clearError.apply(this, [name]);\n        } else if (settings.errorType === 'bs3') {\n          methods.clearErrorBootstrap3.apply(this, [name]);\n        } else if (settings.errorType === 'tb2') {\n          methods.clearErrorTb2.apply(this, [name]);\n        } else {\n          methods.clearErrorBootstrap.apply(this, [name]);\n        }\n        return this;\n      },\n\n      /**\n       * 指定箇所エラー表示処理\n       * @param {string} name 項目名\n       * @param {string} message エラー文言\n       */\n      setError: function (name, message) {\n        const settings = $(this).data(pluginSettings);\n        if (typeof settings.setError === 'function') {\n          settings.setError.apply(this, [name, message]);\n        } else if (settings.errorType === 'bs3') {\n          methods.setErrorBootstrap3.apply(this, [name, message]);\n        } else if (settings.errorType === 'tb2') {\n          methods.setErrorTb2.apply(this, [name, message]);\n        } else {\n          methods.setErrorBootstrap.apply(this, [name, message]);\n        }\n        return this;\n      },\n\n      /**\n       * エラークリア処理\n       * (Bootstrap4レイアウト)\n       * @param {string} name 項目名(未指定時全て)\n       */\n      clearErrorBootstrap: function (name) {\n        if (name) {\n          const field = $(this).find(\"*[name='\" + name + \"']\");\n          $(field).removeClass('is-invalid')\n            .nextAll('.invalid-feedback').remove();\n        } else {\n          $(this).find('.is-invalid')\n            .removeClass('is-invalid')\n            .nextAll('.invalid-feedback').remove();\n        }\n        return this;\n      },\n\n      /**\n       * 指定箇所エラー表示処理\n       * (Bootstrap4レイアウト)\n       * @param {string} name 項目名\n       * @param {string} message エラー文言\n       */\n      setErrorBootstrap: function (name, message) {\n        const field = $(this).find(\"*[name='\" + name + \"']\");\n        const error_message = '<div class=\"invalid-feedback\">' + message + '</div>';\n\n        if (['radio', 'checkbox'].indexOf(field.attr('type')) === -1) {\n          $(field).addClass('is-invalid');\n          if (!$(field).parent().hasClass('input-group')) {\n            $(field).filter(':last').after(error_message);\n          } else {\n            $(field).parent().append(error_message);\n          }\n        } else {\n          const form_check = $(field).closest('.form-check').addClass('is-invalid');\n          $(form_check).filter(':last').after(error_message);\n        }\n        return this;\n      },\n\n      /**\n       * エラークリア処理\n       * (Bootstrap3レイアウト)\n       * @param {string} name 項目名(未指定時全て)\n       */\n      clearErrorBootstrap3: function (name) {\n        if (name) {\n          const field = $(this).find(\"*[name='\" + name + \"']\");\n          $(field).closest('.form-group')\n            .removeClass('has-error')\n            .find('.error_message').remove();\n        } else {\n          $(this).find('.form-group')\n            .removeClass('has-error')\n            .find('.error_message').remove();\n        }\n        return this;\n      },\n\n      /**\n       * 指定箇所エラー表示処理\n       * (Bootstrap3レイアウト)\n       * @param {string} name 項目名\n       * @param {string} message エラー文言\n       */\n      setErrorBootstrap3: function (name, message) {\n        const field = $(this).find(\"*[name='\" + name + \"']\");\n        const error_message = '<span class=\"help-block error_message\">' + message + '</span>';\n        $(field).closest('.form-group').addClass('has-error');\n        if (['radio', 'checkbox'].indexOf(field.attr('type')) === -1) {\n          const input_group = $(field).closest('.input-group');\n          if ($(input_group).length !== 0) {\n            $(input_group).after(error_message);\n          } else {\n            $(field).filter(':last').after(error_message);\n          }\n        } else {\n          $(field).filter(':last').parent().after(error_message);\n        }\n        return this;\n      },\n\n      /**\n       * エラークリア処理\n       * (TwitterBootstrap2.xレイアウト)\n       * @param {string} name 項目名(未指定時全て)\n       */\n      clearErrorTb2: function (name) {\n        if (name) {\n          const field = $(this).find(\"*[name='\" + name + \"']\");\n          $(field).closest('.control-group')\n            .removeClass('error')\n            .find('.error_message').remove();\n        } else {\n          $(this).find('.control-group')\n            .removeClass('error')\n            .find('.error_message').remove();\n        }\n        return this;\n      },\n\n      /**\n       * 指定箇所エラー表示処理\n       * (TwitterBootstrap2.xレイアウト)\n       * @param {string} name 項目名\n       * @param {string} message エラー文言\n       */\n      setErrorTb2: function (name, message) {\n        const field = $(this).find(\"*[name='\" + name + \"']\");\n        $(field).closest('.control-group').addClass('error');\n        $(field).closest('.controls').append('<div class=\"help-block error_message\">' + message + '</div>');\n        return this;\n      },\n\n      /**\n       * パラメータチェック\n       * @param {Object} options オプション\n       */\n      validate: function (options) {\n        settings = $.extend($(this).data(pluginSettings), options);\n\n        methods.clearError.apply(this);\n        let result = true;\n        const arrErrors = methods.getValidateResult.apply(this, [settings]);\n        if (0 < arrErrors.length) {\n          methods.dispError.apply(this, [arrErrors]);\n          result = false;\n        }\n        if (typeof settings.result === 'function') {\n          result = settings.result.apply(this, [result, arrErrors]);\n        }\n        return result;\n      },\n\n      /**\n       * パラメータチェック\n       * (エラー時アラート)\n       * @param {Object} options オプション\n       * @returns {boolean|string[]} エラー値\n       */\n      validate_alert: function (options) {\n        settings = $.extend($(this).data(pluginSettings), options);\n\n        let result = true;\n        const arrErrors = methods.getValidateResult.apply(this, [settings]);\n        if (0 < arrErrors.length) {\n          alert(settings.messages.VALIDATE_ERROR + '\\n' + helpers.join(arrErrors));\n          if (settings.focusError) {\n            // 最初のエラーにフォーカス\n            methods.focusError.apply(this, [arrErrors[0].name]);\n          }\n          result = false;\n        }\n        if (typeof settings.result === 'function') {\n          result = settings.result.apply(this, [result, arrErrors]);\n        }\n        return result;\n      },\n\n      /**\n       * パラメータチェック結果取得\n       * @param {Object} options\n       * @returns {boolean|string[]} エラー値\n       */\n      getValidateResult: function (options) {\n        const form = this;\n        settings = $.extend($(this).data(pluginSettings), options);\n\n        let arrErrors = [];\n        const fields = settings.fields;\n\n        if (!Array.isArray(fields)) {\n          return arrErrors;\n        }\n\n        $.each(fields, function (i, field) {\n          if (!field.rules) {\n            return true;\n          }\n\n          // パラメータチェック方法\n          let arrRules = field.rules;\n          if (!Array.isArray(arrRules)) {\n            arrRules = [arrRules];\n          }\n          // パラメータ値\n          const $objVal = $(form).find(\"*[name='\" + field.name + \"']\");\n          // 値存在チェック\n          const bValueExists = helpers.existsValue($objVal);\n\n          // 各パラメータのチェック処理\n          $.each(arrRules, function (i, rule) {\n            let arrRuleErrors = [];\n            let errors;\n            let params;\n\n            //------------------\n            // ルール分岐\n            //------------------\n            // ルールが配列\n            // [ 'ルール名', [<パラメータ配列>]]\n            // [ 'ルール名', <パラメータ1>, <パラメータ2>..., <パラメータn> ]\n            if (Array.isArray(rule)) {\n              if (rule.length === 0) {\n                return;\n              } else if (rule.length === 2) {\n                params = rule[1];\n                if (!Array.isArray(params)) {\n                  params = [params];\n                }\n              } else if (rule.length >= 3) {\n                params = rule.slice(1);\n              }\n              rule = rule[0];\n            }\n            // ルールがObject\n            // { rule:'ルール名', params:[<パラメータ配列>]}\n            else if (typeof rule === 'object') {\n              if (!rule.rule) {\n                return;\n              }\n              if (rule.params) {\n                params = rule.params;\n                if (!Array.isArray(params)) {\n                  params = [params];\n                }\n              }\n              rule = rule.rule;\n            }\n            // ルールが文字列(旧仕様)\n            else if (typeof rule === 'string') {\n              // パラメータ解析処理\n              params = rule.split(':', 2);\n              if (params[0]) {\n                rule = params[0];\n              }\n              if (params[1]) {\n                try {\n                  params = JSON.parse(params[1]);\n                } catch (e) {\n                  params = params[1].split(',');\n                }\n                if (!Array.isArray(params)) {\n                  params = [params];\n                }\n              } else {\n                params = [];\n              }\n            }\n\n            // 独自チェック関数\n            if (typeof rule === 'function') {\n              errors = rule.apply(form, [field, $objVal, params, settings]);\n              helpers.pushErrors(arrRuleErrors, field, errors);\n            } else if (typeof rule === 'string') {\n              // 指定フィールドに値が入っているとき\n              if (bValueExists) {\n                if (validateExistsMethods[rule]) {\n                  errors = validateExistsMethods[rule].apply(form, [field, $objVal, params, settings]);\n                  helpers.pushErrors(arrRuleErrors, field, errors);\n                } else {\n                  //$.error( 'validateExistsMethod \"' +  rule + '\" does not exist in '+pluginName+' plugin!');\n                }\n              }\n              // 指定フィールドに値が入っていないとき\n              else {\n                // 必須項目チェック\n                if (rule === 'required') {\n                  helpers.pushErrors(arrRuleErrors, field, settings.messages.REQUIRED);\n                } else if (rule === 'checkbox') {\n                  errors = validateExistsMethods[rule].apply(form, [field, $objVal, params, settings]);\n                  helpers.pushErrors(arrRuleErrors, field, errors);\n                } else if (validateMethods[rule]) {\n                  errors = validateMethods[rule].apply(form, [field, $objVal, params, settings]);\n                  helpers.pushErrors(arrRuleErrors, field, errors);\n                } else {\n                  //$.error( 'validateMethods \"' +  rule + '\" does not exist in '+pluginName+' plugin!');\n                }\n              }\n            }\n\n            // エラー時追加\n            if (arrRuleErrors && 0 < arrRuleErrors.length) {\n              arrErrors = arrErrors.concat(arrRuleErrors);\n            }\n          });\n          return true;\n        });\n        return arrErrors;\n      }\n    };\n\n    /**\n     * バリデート処理群\n     * @class\n     */\n    const validateMethods = {\n      /**\n       * 数値チェック(値なし)\n       * @param {string} field フィールド名\n       * @param {jQuery} objVal 値オブジェクト\n       * @returns {string|null} エラーメッセージ(正常時null)\n       */\n      numeric: function (field, objVal) {\n        // type=\"number\"時の仮対策\n        if (objVal[0] && objVal[0].validity && objVal[0].validity.badInput) {\n          return objVal[0].validationMessage;\n        }\n        return null;\n      },\n      /**\n       * 数値チェック(値なし,エイリアス)\n       * @alias validateMethods.numeric\n       * @param {string} field フィールド名\n       * @param {jQuery} objVal 値オブジェクト\n       * @returns {string|null} エラーメッセージ(正常時null)\n       */\n      number: function (field, objVal) {\n        return validateMethods.numeric.apply(this, [field, objVal]);\n      },\n\n      /**\n       * 郵便番号の4桁部分が入力された場合\n       * 3桁部が入力必須になるチェック\n       * @param {Object} field フィールド名\n       * @param {string} field.name フィールド物理名\n       * @param {jQuery} objVal 値オブジェクト\n       * @param {*} params ルールパラメータ\n       * @param {Object} settings 設定情報\n       * @returns {string|null} エラーメッセージ(正常時null)\n       */\n      zip_ex: function (field, objVal, params, settings) {\n        const zip_after = $(this).find(\"*[name='\" + field.name + settings.zip_suffix + \"']\");\n        if (objVal && helpers.getValue(objVal) && (!zip_after || !zip_after.val()))\n          return settings.messages.INSUFFICIENT;\n        return null;\n      },\n\n      /**\n       * 年月日チェック\n       * フォーム name+\"_y\", name+\"_m\", name+\"_d\"のチェックを行う\n       * @param {Object} field フィールド名\n       * @param {string} field.name フィールド物理名\n       * @param {jQuery} objVal 値オブジェクト\n       * @param {string[]} params ルールパラメータ\n       * @param {string} params.0 \"required\":必須チェック\n       * @returns {string[]} エラー一覧(正常時空配列)\n       */\n      ymd: function (field, objVal, params) {\n        // 変数宣言\n        let arrErrors = [];\n\n        // 日付オブジェクト取得\n        let year = null, month = null, day = null;\n        let b_year = false, b_month = false, b_day = false;\n        const objY = $(this).find(\"*[name='\" + field.name + settings.ymd_suffix_y + \"']\");\n        const objM = $(this).find(\"*[name='\" + field.name + settings.ymd_suffix_m + \"']\");\n        const objD = $(this).find(\"*[name='\" + field.name + settings.ymd_suffix_d + \"']\");\n        if (objY && objY.val() !== '') {\n          b_year = true;\n          year = objY.val();\n        }\n        if (objM && objM.val() !== '') {\n          b_month = true;\n          month = objM.val();\n        }\n        if (objD && objD.val() !== '') {\n          b_day = true;\n          day = objD.val();\n        }\n\n        // 日付必須チェック\n        if (params[0] === 'required') {\n          if (!b_year)\n            arrErrors.push(helpers.format(settings.messages.REQUIRED_PART, settings.messages.DATE_PART_Y));\n          if (!b_month)\n            arrErrors.push(helpers.format(settings.messages.REQUIRED_PART, settings.messages.DATE_PART_M));\n          if (!b_day)\n            arrErrors.push(helpers.format(settings.messages.REQUIRED_PART, settings.messages.DATE_PART_D));\n        } else {\n          // 日付の年月日が一部のみ入力されているとき\n          if ((b_year || b_month || b_day) && !(b_year && b_month && b_day)) {\n            if (!b_year)\n              arrErrors.push(helpers.format(settings.messages.INSUFFICIENT_PART, settings.messages.DATE_PART_Y));\n            if (!b_month)\n              arrErrors.push(helpers.format(settings.messages.INSUFFICIENT_PART, settings.messages.DATE_PART_M));\n            if (!b_day)\n              arrErrors.push(helpers.format(settings.messages.INSUFFICIENT_PART, settings.messages.DATE_PART_D));\n          }\n        }\n        // 年数値チェック\n        if (b_year && !helpers._isInteger(year)) {\n          arrErrors.push(helpers.format(settings.messages.INTEGER_PART, settings.messages.DATE_PART_Y));\n        }\n        // 月数値チェック\n        if (b_month && !helpers._isInteger(month)) {\n          arrErrors.push(helpers.format(settings.messages.INTEGER_PART, settings.messages.DATE_PART_M));\n        }\n        // 日数値チェック\n        if (b_day && !helpers._isInteger(day)) {\n          arrErrors.push(helpers.format(settings.messages.INTEGER_PART, settings.messages.DATE_PART_D));\n        }\n\n        // 年月日チェック\n        if (arrErrors.length === 0 && !helpers._isDate(year, month, day)) {\n          arrErrors.push(helpers.format(settings.messages.DATE_INVALID));\n        }\n\n        return arrErrors;\n      }\n    };\n\n    /**\n     * パラメータチェック群\n     * @class\n     */\n    const validateExistsMethods = {\n      /**\n       * 確認項目\n       * @param {Object} field フィールド名\n       * @param {Object} field.name フィールド物理名\n       * @param {Object} field.d_name フィールド表示名\n       * @param {jQuery} objVal 値オブジェクト\n       * @returns {string|null} エラーメッセージ(正常時null)\n       */\n      confirm: function (field, objVal) {\n        const confirmVal = $(this).find(\"*[name='\" + field.name + settings.confirm_suffix + \"']\");\n        if (!objVal || !confirmVal || helpers.getValue(objVal) !== confirmVal.val())\n          return helpers.format(settings.messages.CONFIRM, (field.d_name ? field.d_name : settings.messages.CONFIRM_FIELD));\n        return null;\n      },\n      /**\n       * E-Mailチェック\n       * @param {string} field フィールド名\n       * @param {jQuery} objVal 値オブジェクト\n       * @returns {string|null} エラーメッセージ(正常時null)\n       */\n      email: function (field, objVal) {\n        const val = helpers.getValue(objVal);\n        if (val) {\n          const email_error = helpers._isEmailEx(val);\n          if (email_error !== '') {\n            return email_error;\n          }\n        }\n        return null;\n      },\n      /**\n       * 全角\n       * @param {string} field フィールド名\n       * @param {jQuery} objVal 値オブジェクト\n       * @returns {string|null} エラーメッセージ(正常時null)\n       */\n      zenkaku: function (field, objVal) {\n        if (!helpers._isZenkaku(helpers.getValue(objVal))) {\n          return settings.messages.ZENKAKU;\n        }\n        return null;\n      },\n      /**\n       * 半角\n       * @param {string} field フィールド名\n       * @param {jQuery} objVal 値オブジェクト\n       * @returns {string|null} エラーメッセージ(正常時null)\n       */\n      hankaku: function (field, objVal) {\n        if (!helpers._isHankaku(helpers.getValue(objVal))) {\n          return settings.messages.HANKAKU;\n        }\n        return null;\n      },\n      /**\n       * 全角カタカナ\n       * @param {string} field フィールド名\n       * @param {jQuery} objVal 値オブジェクト\n       * @returns {string|null} エラーメッセージ(正常時null)\n       */\n      zen_katakana: function (field, objVal) {\n        if (!helpers._isAllkana(helpers.getValue(objVal))) {\n          return settings.messages.ZEN_KANA;\n        }\n        return null;\n      },\n      /**\n       * 全角ひらがな\n       * @param {string} field フィールド名\n       * @param {jQuery} objVal 値オブジェクト\n       * @returns {string|null} エラーメッセージ(正常時null)\n       */\n      hiragana: function (field, objVal) {\n        if (!helpers._isAllHiragana(helpers.getValue(objVal))) {\n          return settings.messages.HIRAGANA;\n        }\n        return null;\n      },\n      /**\n       * 電話番号\n       * @param {string} field フィールド名\n       * @param {jQuery} objVal 値オブジェクト\n       * @returns {string|null} エラーメッセージ(正常時null)\n       */\n      tel: function (field, objVal) {\n        if (!helpers._isTel(helpers.getValue(objVal))) {\n          return settings.messages.TEL;\n        }\n        return null;\n      },\n      /**\n       * 最小文字数\n       * @param {string} field フィールド名\n       * @param {jQuery} objVal 値オブジェクト\n       * @param {Array<string|number>} params ルールパラメータ\n       * @param {string|number} params.0 最小文字数\n       * @returns {string|null} エラーメッセージ(正常時null)\n       */\n      minlength: function (field, objVal, params) {\n        const min = Number(params[0]);\n        if (helpers.getValue(objVal).length < min)\n          return helpers.format(settings.messages.MIN_LENGTH, min);\n        return null;\n      },\n      /**\n       * 最大文字数\n       * @param {string} field フィールド名\n       * @param {jQuery} objVal 値オブジェクト\n       * @param {Array<string|number>} params ルールパラメータ\n       * @param {string|number} params.0 最大文字数\n       * @returns {string|null} エラーメッセージ(正常時null)\n       */\n      maxlength: function (field, objVal, params) {\n        const max = Number(params[0]);\n        if (max < helpers.getValue(objVal).length)\n          return helpers.format(settings.messages.MAX_LENGTH, max);\n        return null;\n      },\n      /**\n       * 数値チェック\n       * @param {string} field フィールド名\n       * @param {jQuery} objVal 値オブジェクト\n       * @returns {string|null} エラーメッセージ(正常時null)\n       */\n      numeric: function (field, objVal) {\n        const val = helpers.getValue(objVal);\n        if (!isFinite(val) || val.indexOf(' ' ) !== -1 || val.indexOf('0x' ) !== -1) {\n          return settings.messages.NUMERICAL_VALUE;\n        }\n        return null;\n      },\n      /**\n       * 数値チェック(エイリアス)\n       * @alias validateExistsMethods.numeric\n       * @param {string} field フィールド名\n       * @param {jQuery} objVal 値オブジェクト\n       * @returns {string|null} エラーメッセージ(正常時null)\n       */\n      number: function (field, objVal) {\n        return validateExistsMethods.numeric.apply(this, [field, objVal]);\n      },\n      /**\n       * 数値桁数チェック\n       * @param {string} field フィールド名\n       * @param {jQuery} objVal 値オブジェクト\n       * @param {Array<string|number>} params ルールパラメータ\n       * @param {string|number} params.0 最小桁数\n       * @param {string|number} params.1 最大桁数\n       * @returns {string|null} エラーメッセージ(正常時null)\n       */\n      numlength: function (field, objVal, params) {\n        const val = helpers.getValue(objVal);\n        let reg_tmp = params[0],\n          err_message_tmp = params[0];\n        if (params[1]) {\n          reg_tmp += \",\" + params[1];\n          err_message_tmp += \"～\" + params[1];\n        }\n        const reg = new RegExp(\"^\\\\d{\" + reg_tmp + \"}$\");\n        if (!reg.test(val)) {\n          return helpers.format(settings.messages.NUM_LENGTH, err_message_tmp);\n        }\n        return null;\n      },\n      /**\n       * 最小値\n       * @param {string} field フィールド名\n       * @param {jQuery} objVal 値オブジェクト\n       * @param {Array<string|number>} params ルールパラメータ\n       * @param {string|number} params.0 最小値\n       * @returns {string|null} エラーメッセージ(正常時null)\n       */\n      min: function (field, objVal, params) {\n        const val = helpers.getValue(objVal);\n        if (!helpers._isInteger(val)) {\n          return settings.messages.INTEGER;\n        }\n        const min = Number(params[0]);\n        if (val < min)\n          return helpers.format(settings.messages.MIN, min);\n        return null;\n      },\n      /**\n       * 最大値\n       * @param {string} field フィールド名\n       * @param {jQuery} objVal 値オブジェクト\n       * @param {Array<string|number>} params ルールパラメータ\n       * @param {string|number} params.0 最大値\n       * @returns {string|null} エラーメッセージ(正常時null)\n       */\n      max: function (field, objVal, params) {\n        const val = helpers.getValue(objVal);\n        if (!helpers._isInteger(val)) {\n          return settings.messages.INTEGER;\n        }\n        const max = Number(params[0]);\n        if (max < val)\n          return helpers.format(settings.messages.MIN, max);\n        return null;\n      },\n      /**\n       * 数値範囲\n       * @param {string} field フィールド名\n       * @param {jQuery} objVal 値オブジェクト\n       * @param {Array<string|number>} params ルールパラメータ\n       * @param {string|number} params.0 最小値\n       * @param {string|number} params.1 最大値\n       * @returns {string|null} エラーメッセージ(正常時null)\n       */\n      range: function (field, objVal, params) {\n        const val = helpers.getValue(objVal);\n        if (!helpers._isInteger(val)) {\n          return settings.messages.INTEGER;\n        }\n        const min = Number(params[0]),\n          max = Number(params[1]);\n        if (val < min || max < val)\n          return helpers.format(settings.messages.RANGE, min, max);\n        return null;\n      },\n      /**\n       * 日付\n       * @param {string} field フィールド名\n       * @param {jQuery} objVal 値オブジェクト\n       * @returns {string|null} エラーメッセージ(正常時null)\n       */\n      date: function (field, objVal) {\n        const val = helpers.getValue(objVal),\n          reg = new RegExp(\"^((\\\\d{1,4})[/-](\\\\d{1,2})[/-](\\\\d{1,2}))$\", \"g\");\n        // 1980/1/2\n        //\t\t\t\t↓\n        // 1980/1/2,1980/1/2,1980,1,2\n        if (!val.match(reg)) {\n          return settings.messages.DATE;\n        }\n        // 年月日チェック\n        if (!helpers._isDate(RegExp.$2, RegExp.$3, RegExp.$4)) {\n          return settings.messages.DATE_INVALID;\n        }\n        return null;\n      },\n      /**\n       * 日時チェック\n       * [YYYY-MM-DD hh:mm:ss]または[YYYY/MM/DD]の書式でチェックする\n       * @param {string} field フィールド名\n       * @param {jQuery} objVal 値オブジェクト\n       * @returns {string|null} エラーメッセージ(正常時null)\n       */\n      datetime: function (field, objVal) {\n        const val = helpers.getValue(objVal),\n          reg = new RegExp(\"^((\\\\d{1,4})[/-](\\\\d{1,2})[/-](\\\\d{1,2}))( ((\\\\d{1,2}):(\\\\d{1,2})(:(\\\\d{1,2}))?))?$\", 'g');\n        // 1980/1/2 24:12:11\n        //      ↓\n        // 1980/1/2 23:12:11,1980/1/2,1980,1,2, 24:12:11,23:12:11,23,12,11\n        if (!val.match(reg)) {\n          return settings.messages.DATETIME;\n        }\n        // 年月日チェック\n        if (!helpers._isDate(RegExp.$2, RegExp.$3, RegExp.$4)) {\n          return settings.messages.DATE_INVALID;\n        }\n        if (RegExp.$6 && !helpers._isTime(RegExp.$7, RegExp.$8, RegExp.$10)) {\n          return settings.messages.TIME_INVALID;\n        }\n        return null;\n      },\n      /**\n       * 日付チェック\n       * [YYYY/MM/DD] or [YYYY/MM] or [YYYY]の書式でチェックする\n       * @param {string} field フィールド名\n       * @param {jQuery} objVal 値オブジェクト\n       * @returns {string|null} エラーメッセージ(正常時null)\n       */\n      date_ex: function (field, objVal) {\n        const val = helpers.getValue(objVal),\n          reg = new RegExp(\"^(\\\\d{1,4})([/-](\\\\d{1,2})([/-](\\\\d{1,2}))?)?$\");\n        // 1980/1/2\n        //      ↓\n        // 1980/1/2,1980/1/2,1980,1,2\n        if (!val.match(reg)) {\n          return settings.messages.DATE_EX;\n        }\n        // 年月日チェック\n        const y = RegExp.$1,\n          m = RegExp.$3 ? RegExp.$3 : 1,\n          d = RegExp.$5 ? RegExp.$5 : 1;\n        if (!helpers._isDate(y, m, d)) {\n          return settings.messages.DATE_INVALID;\n        }\n        return null;\n      },\n      /**\n       * 時間チェック\n       * [hh:mm:ss]の書式でチェックする\n       * @param {string} field フィールド名\n       * @param {jQuery} objVal 値オブジェクト\n       * @param {string[]} params ルールパラメータ\n       * @param {string} params.0 \"hm\":[hh:mm]の書式でチェック\n       * @returns {string|null} エラーメッセージ(正常時null)\n       */\n      time: function (field, objVal, params) {\n        const val = helpers.getValue(objVal);\n        let reg;\n        if (params[0] === \"hm\") {\n          reg = new RegExp(\"^(\\\\d{1,2}):(\\\\d{1,2})$\", \"g\");\n          if (!val.match(reg)) {\n            return settings.messages.TIME_HM;\n          }\n          if (!helpers._isTime(RegExp.$1, RegExp.$2, 0)) {\n            return settings.messages.TIME_INVALID;\n          }\n        } else {\n          reg = new RegExp(\"^(\\\\d{1,2}):(\\\\d{1,2}):(\\\\d{1,2})$\", \"g\");\n          if (!val.match(reg)) {\n            return settings.messages.TIME;\n          }\n          if (!helpers._isTime(RegExp.$1, RegExp.$2, RegExp.$3)) {\n            return settings.messages.TIME_INVALID;\n          }\n        }\n        return null;\n      },\n      /**\n       * 郵便番号\n       * @param {string} field フィールド名\n       * @param {jQuery} objVal 値オブジェクト\n       * @returns {string|null} エラーメッセージ(正常時null)\n       */\n      zip: function (field, objVal) {\n        const val = helpers.getValue(objVal),\n          reg = new RegExp(\"^\\\\d{1,3}-\\\\d{1,4}$\", \"g\");\n        if (!val.match(reg)) {\n          return settings.messages.ZIP;\n        }\n        return null;\n      },\n      /**\n       * チェックボックス\n       * @param {string} field フィールド名\n       * @param {jQuery} objVal 値オブジェクト\n       * @param {Array<string|number>} params ルールパラメータ\n       * @param {string|number} params.0 最小選択数\n       * @param {string|number} params.1 最大選択数\n       * @returns {string|null} エラーメッセージ(正常時null)\n       */\n      checkbox: function (field, objVal, params) {\n        const check = objVal.filter(\":checked\").length,\n          min = Number(params[0]);\n        if (2 <= params.length) {\n          const max = Number(params[1]);\n          if (check < min || max < check)\n            return helpers.format(settings.messages.CHECKBOX_RANGE, min, max);\n        } else {\n          if (check < min)\n            return helpers.format(settings.messages.CHECKBOX_MIN, min);\n        }\n      },\n\n      /**\n       * 正規表現チェック\n       * @param {string} field フィールド名\n       * @param {jQuery} objVal 値オブジェクト\n       * @param {Array<string|RegExp>} params 正規表現パラメータ\n       * @param {string|RegExp} params.0 正規表現(文字列 or 正規表現クラス)\n       * @param {string} params.1 正規表現フラグ(オプション)\n       * @param {string} params.{1|2} エラーメッセージ(オプション)\n       * @returns {string|null} エラーメッセージ(正常時null)\n       */\n      regexp: function (field, objVal, params) {\n        const val = helpers.getValue(objVal);\n        let reg, err_message;\n        if (!Array.isArray(params)) {\n          params = [params];\n        }\n        try {\n          if (typeof params[0] === 'string') {\n            reg = new RegExp(params[0], params[1] ? params[1] : undefined);\n            err_message = params[2];\n          } else {\n            reg = params[0];\n            err_message = params[1];\n          }\n          if (!reg.test(val))\n            return (err_message ? err_message : settings.messages.REGEXP_INVALID_VALUE);\n        } catch (e) {\n          return settings.messages.REGEXP_INVALID_PARAM;\n        }\n        return null;\n      }\n    };\n\n    /**\n     * 補助処理群\n     * @class\n     */\n    const helpers = {\n      /**\n       * 値が存在するか？\n       * @param {jQuery} objVal 値オブジェクト\n       * @returns {boolean} true:存在する\n       */\n      existsValue: function (objVal) {\n        let ret;\n        if (!objVal) {\n          ret = false;\n        } else if (objVal.attr('type') === 'checkbox') {\n          ret = (0 < objVal.filter(\":checked\").length);\n        } else {\n          ret = !!helpers.getValue(objVal);\n        }\n        return ret;\n      },\n      /**\n       * 値を返す\n       * @param {jQuery} objVal 値オブジェクト\n       * @returns {*} 値\n       */\n      getValue: function (objVal) {\n        const type = objVal.attr('type');\n        let val;\n        if (type === 'radio') {\n          val = objVal.filter(':checked').val();\n        } else if (type !== 'checkbox') {\n          val = objVal.val();\n        } else {\n          val = [];\n          objVal.filter(':checked').each(function () {\n            val.push($(this).val());\n          });\n        }\n        return val;\n      },\n      /**\n       * エラー配列付加\n       * @param {string[]|Object[]} arrErrors エラー情報配列\n       * @param {Object} field    フィールド情報\n       * @param {string|string[]} errors 追加エラー情報\n       * @return {string[]|Object[]} array arrErrors\n       */\n      pushErrors: function (arrErrors, field, errors) {\n        if (typeof errors === 'string' && errors) {\n          arrErrors.push({name: field.name, d_name: field.d_name, message: errors});\n        } else if (Array.isArray(errors)) {\n          $.each(errors, function (i, error) {\n            arrErrors.push({name: field.name, d_name: field.d_name, message: error});\n          });\n        }\n        return arrErrors;\n      },\n      /**\n       * 半角英数字チェック\n       * @param {string} _text  文字列\n       * @return {boolean} true:OK, false:NG\n       */\n      _isHankaku: function (_text) {\n        // 半角以外が存在する場合\n        return !(/[^\\x20-\\x7E]/).test(_text);\n      },\n\n      /**\n       * 全角チェック\n       * @param {string} _text  文字列\n       * @return {boolean} true:OK, false:NG\n       */\n      _isZenkaku: function (_text) {\n        return !(/[\\w\\-.]/).test(_text);\n      },\n\n      /**\n       * 電話番号チェック\n       * @param {string} inpText  文字列\n       * @return {boolean} true:OK, false:NG\n       */\n      _isTel: function (inpText) {\n        // 「0～9」「-」「(」「)」以外があったらエラー\n        return !(/[^0-9-()]/).test(inpText);\n      },\n\n      /**\n       * 整数チェック\n       * @param {?string} _value 値\n       * @return {boolean} true:OK, false:NG\n       */\n      _isInteger: function (_value) {\n        const test = /^(-\\d+|\\d*)$/.test('' + _value);\n        return test && !isNaN(_value);\n      },\n\n      /**\n       * 年月日整合性チェック\n       * @param {?string|?number} _year  年\n       * @param {?string|?number} _month 月\n       * @param {?string|?number} _day 日\n       * @return {boolean} true:OK, false:NG\n       */\n      _isDate: function (_year, _month, _day) {\n        //==========================\n        // 年範囲チェック\n        //==========================\n        if (_year < 1900 || 9999 < _year) {\n          return false;\n        }\n        //==========================\n        // 月範囲チェック\n        //==========================\n        if (_month < 1 || 12 < _month) {\n          return false;\n        }\n        //==========================\n        // 日範囲チェック\n        //==========================\n        // 最小値\n        if (_day < 1) {\n          return false;\n        }\n        // 最大値\n        let arrMaxMonth = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n        // 2月うるう年補正\n        if ((_year % 4 === 0 && _year % 100 !== 0) || _year % 400 === 0) {\n          arrMaxMonth[1] = 29;\n        }\n        return !(arrMaxMonth[_month - 1] < _day);\n      },\n\n      /**\n       * 時分整合性チェック\n       * @param {string|number} _hour  時\n       * @param {string|number} _minute  分\n       * @param {?string|?number} _second  秒(null=未チェック)\n       * @return {boolean} true:OK, false:NG\n       */\n      _isTime: function (_hour, _minute, _second) {\n        //====================\n        //\t時範囲チェック\n        //====================\n        if (_hour < 0 || 24 <= _hour) {\n          return false;\n        }\n        //=====================\n        //\t分範囲チェック\n        //=====================\n        if (_minute < 0 || 60 <= _minute) {\n          return false;\n        }\n        //=====================\n        //\t秒範囲チェック\n        //=====================\n        return !(_second !== null && (_second < 0 || 60 <= _second));\n      },\n\n      /**\n       * 全角カタカナチェック\n       * @param {string} _inpText  文字列\n       * @return {boolean} true:OK, false:NG\n       */\n      _isAllkana: function (_inpText) {\n        for (let i = 0; i < _inpText.length; i++) {\n          //if(_inpText.charAt(i) < 'ア' || _inpText.charAt(i) > 'ン'){\n          if (_inpText.charAt(i) < 'ァ' || _inpText.charAt(i) > 'ヶ') {\n            if (_inpText.charAt(i) !== 'ー' && _inpText.charAt(i) !== ' ' && _inpText.charAt(i) !== '　') {\n              return false;\n            }\n          }\n        }\n        return true;\n      },\n\n      /**\n       * 全角ひらがなチェック\n       * @param {string} _inpText  文字列\n       * @return {boolean} true:OK, false:NG\n       */\n      _isAllHiragana: function (_inpText) {\n        for (let i = 0; i < _inpText.length; i++) {\n          if (_inpText.charAt(i) < 'ぁ' || _inpText.charAt(i) > 'ん') {\n            if (_inpText.charAt(i) !== 'ー' && _inpText.charAt(i) !== ' ' && _inpText.charAt(i) !== '　') {\n              return false;\n            }\n          }\n        }\n        return true;\n      },\n\n      /**\n       * EMailチェック\n       * @param {string} _strEmail  EMAIL\n       * @return {string} \"\":エラー無し, \"\"以外:エラー\n       */\n      _isEmailEx: function (_strEmail) {\n        const emailPat = /^(.+)@(.+)$/,\n          specialChars = \"\\\\(\\\\)<>@,;:\\\\\\\\\\\\\\\"\\\\.\\\\[\\\\]\",\n          validChars = \"[^\\\\s\" + specialChars + \"]\",\n          // quotedUser=\"(\\\"[^\\\"]*\\\")\",\n          ipDomainPat = /^\\[(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})]$/,\n          atom = validChars + '+',\n          // word=\"(\" + atom + \"|\" + quotedUser + \")\",\n          // userPat=new RegExp(\"^\" + word + \"(\\\\.\" + word + \")*$\"),\n          domainPat = new RegExp(\"^\" + atom + \"(\\\\.\" + atom + \")*$\"),\n\n          // 最初の「@」で分割\n          matchArray = _strEmail.match(emailPat);\n\n        // 「@」がない\n        if (matchArray === null) {\n          return settings.messages.MAIL_NO_AT;\n        }\n\n        // ユーザーとドメインとして格納\n        // const user=matchArray[1];\n        const domain = matchArray[2];\n\n        // KUMA:携帯用パッチ\n        /*\n        // ユーザー部が無い\n        if (user.match(userPat)==null) {\n            return \"正しくありません(USER).\"+userPat;\n        }\n        */\n        // ドメイン名のIPパターンチェック\n        const IPArray = domain.match(ipDomainPat);\n        if (IPArray !== null) {\n          for (let i = 1; i <= 4; i++) {\n            if (IPArray[i] > 255) {\n              return settings.messages.MAIL_INVALID_IP;\n            }\n          }\n        }\n\n        // ドメイン名パターンチェック\n        const domainArray = domain.match(domainPat);\n        if (domainArray === null) {\n          return settings.messages.MAIL_NO_DOMAIN;\n        }\n\n        const atomPat = new RegExp(atom, \"g\"),\n          domArr = domain.match(atomPat),\n          len = domArr.length;\n\n        // 最後のドメインが2文字か3文字の以外のとき、エラー\n        // ex) jp,comはOK\n        if (domArr[domArr.length - 1].length < 2 || 4 < domArr[domArr.length - 1].length) {\n          return settings.messages.MAIL_INVALID_LOCALE;\n        }\n\n        if (len < 2) {\n          return settings.messages.MAIL_INVALID_DOMAIN;\n        }\n        return \"\";\n      },\n      format: function () {\n        const args = Array.prototype.slice.call(arguments, 0);\n        let message = args.shift();\n        $.each(args, function (index, element) {\n          message = message.replace(new RegExp('\\\\{' + index + '}', 'g'), element);\n        });\n        return message;\n      },\n      /**\n       * エラーメッセージを返す\n       * @param {string[]|Object[]} arrErrors エラー情報配列\n       * @param {?string} delimiter デリミタ\n       * @returns {string} エラーメッセージ\n       */\n      join: function (arrErrors, delimiter) {\n        if (delimiter === undefined) delimiter = '\\n';\n        let arrErrorMessages = [];\n        $.each(arrErrors, function (i, error) {\n          if (typeof error === 'string' && error) {\n            arrErrorMessages.push(error);\n          } else {\n            //-----------------------\n            // エラー情報追加\n            // error.name フィールド名\n            // error.d_name フィールド表示名\n            // error.message エラーメッセージ\n            //-----------------------\n            arrErrorMessages.push((error.d_name ? error.d_name : error.name) + ' : ' + error.message);\n          }\n        });\n        return arrErrorMessages.join(delimiter);\n      }\n    };\n\n    if (methods[method]) {\n      return methods[method].apply(this, Array.prototype.slice.call(arguments, 1));\n    } else if (typeof method === 'object' || !method) {\n      return methods.init.apply(this, arguments);\n    } else {\n      $.error('Method \"' + method + '\" does not exist in ' + pluginName + ' plugin!');\n    }\n  };\n  /**\n   * デフォルト設定値\n   * @external:\"jQuery.fn\".formValidate.defaults\n   */\n  $.fn[pluginName].defaults = {\n    submit: 'validate',\n    confirm_suffix: '_confirm',\n    zip_suffix: '_after',\n    ymd_suffix_y: '_y',\n    ymd_suffix_m: '_m',\n    ymd_suffix_d: '_d',\n    fields: null,\n    errorType: null,\n    clearError: null,\n    setError: null,\n    focusError: true,\n    focusErrorSpeed: 'fast',\n    // メッセージ定義\n    messages: {\n      VALIDATE_ERROR: '入力に誤りがあります.',\n      // Required\n      REQUIRED: '必須項目です.',\n      REQUIRED_PART: '{0} は必須項目です.',\n      INSUFFICIENT: '不足しています.',\n      INSUFFICIENT_PART: '{0} が不足しています.',\n      CONFIRM: '確認{0}と異なっています.',\n      CONFIRM_FIELD: '項目',\n      // input a numerical value\n      NUMERICAL_VALUE: '数値を入力して下さい.',\n      INTEGER: '整数値を入力して下さい.',\n      INTEGER_PART: '{0} は整数値を入力して下さい.',\n      MIN: '{0} ～ の数値を入力してください.',\n      MAX: '～ {0} の数値を入力してください.',\n      RANGE: '{0} ～ {1} の数値を入力してください.',\n      MIN_LENGTH: '{0}文字以上で入力して下さい.',\n      MAX_LENGTH: '{0}文字以下で入力して下さい.',\n      NUM_LENGTH: '{0}桁の数値を入力してください.',\n      CHECKBOX_MIN: '{0} 個チェックしてください.',\n      CHECKBOX_RANGE: '{0}～{1} 個の間でチェックしてください.',\n      ZENKAKU: '全角で入力してください.',\n      HANKAKU: '半角で入力してください.',\n      ZEN_KANA: '全角カタカナで入力してください.',\n      HIRAGANA: 'ひらがなで入力してください.',\n      TEL: '数値-()で入力してください.',\n      ZIP: '[nnn-nnnn]書式で記述してください.',\n      // 日付系\n      DATE: '[YYYY/MM/DD]書式で記述してください.',\n      DATE_EX: '[YYYY/MM/DD] or [YYYY/MM] or [YYYY]書式で記述してください.',\n      DATETIME: '[YYYY/MM/DD hh:mm:ss]書式で記述してください.',\n      TIME: '[hh:mm:ss]書式で記述してください.',\n      TIME_HM: '[hh:mm:ss]書式で記述してください.',\n      DATE_INVALID: '日付が間違っています.',\n      TIME_INVALID: '時間が間違っています.',\n      DATE_PART_Y: '(年)',\n      DATE_PART_M: '(月)',\n      DATE_PART_D: '(日)',\n      // 正規表現系\n      REGEXP_INVALID_PARAM: '正規表現が間違っています.',\n      REGEXP_INVALID_VALUE: '書式が間違っています.',\n      // メール系\n      MAIL_NO_AT: '正しくありません(@).',\n      MAIL_INVALID_IP: '正しくありません(IP).',\n      MAIL_NO_DOMAIN: 'ドメイン名がありません(DOMAIN).',\n      MAIL_INVALID_LOCALE: '正しくありません(LOCALE).',\n      MAIL_INVALID_DOMAIN: 'ドメイン名の書式が誤っています.',\n      // その他\n      NOT_EXISTS_FIELD: 'フィールド名[{0}]が存在しません'\n    }\n  };\n\n})(jQuery, window, document);\n"],"sourceRoot":""}